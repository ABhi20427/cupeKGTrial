{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY projects\\\\CupeKG\\\\cupe-kg-frontend\\\\src\\\\components\\\\ChatInterface\\\\MessageGroup.jsx\";\nimport React from 'react';\nimport './MessageGroup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageGroup = ({\n  messages,\n  onSuggestionClick\n}) => {\n  const formatTimestamp = timestamp => {\n    const now = new Date();\n    const messageTime = new Date(timestamp);\n    const diffInMinutes = Math.floor((now - messageTime) / (1000 * 60));\n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return messageTime.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getConfidenceLevel = confidence => {\n    if (confidence > 0.7) return 'high';\n    if (confidence > 0.4) return 'medium';\n    return 'low';\n  };\n  const getConfidenceIcon = confidence => {\n    if (confidence > 0.7) return '‚óè';\n    if (confidence > 0.4) return '‚óê';\n    return '‚óã';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-group\",\n    children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type}-message ${message.confidence && getConfidenceLevel(message.confidence) === 'high' ? 'high-confidence' : ''}`,\n      style: {\n        animationDelay: `${index * 0.1}s`,\n        '--message-index': index\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), message.type === 'bot' && message.confidence && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-confidence\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `confidence-indicator ${getConfidenceLevel(message.confidence)}`,\n            children: getConfidenceIcon(message.confidence)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"confidence-text\",\n            children: [Math.round(message.confidence * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-timestamp\",\n        children: [formatTimestamp(message.timestamp), message.type === 'user' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-status\",\n          children: message.status === 'delivered' ? '‚úì' : '‚è≥'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), message.type === 'bot' && message.suggestions && message.suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-suggestions\",\n        children: message.suggestions.map((suggestion, suggestionIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggestion-button\",\n          onClick: () => onSuggestionClick(suggestion),\n          style: {\n            animationDelay: `${index * 0.1 + suggestionIndex * 0.05}s`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"suggestion-icon\",\n            children: \"\\uD83D\\uDCAB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this), suggestion]\n        }, suggestionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageGroup;\nexport default MessageGroup;\nvar _c;\n$RefreshReg$(_c, \"MessageGroup\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageGroup","messages","onSuggestionClick","formatTimestamp","timestamp","now","Date","messageTime","diffInMinutes","Math","floor","toLocaleTimeString","hour","minute","getConfidenceLevel","confidence","getConfidenceIcon","className","children","map","message","index","type","style","animationDelay","text","fileName","_jsxFileName","lineNumber","columnNumber","round","status","suggestions","length","suggestion","suggestionIndex","onClick","id","_c","$RefreshReg$"],"sources":["D:/MY projects/CupeKG/cupe-kg-frontend/src/components/ChatInterface/MessageGroup.jsx"],"sourcesContent":["import React from 'react';\r\nimport './MessageGroup.css';\r\n\r\nconst MessageGroup = ({ messages, onSuggestionClick }) => {\r\n  const formatTimestamp = (timestamp) => {\r\n    const now = new Date();\r\n    const messageTime = new Date(timestamp);\r\n    const diffInMinutes = Math.floor((now - messageTime) / (1000 * 60));\r\n    \r\n    if (diffInMinutes < 1) return 'Just now';\r\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\r\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\r\n    \r\n    return messageTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  const getConfidenceLevel = (confidence) => {\r\n    if (confidence > 0.7) return 'high';\r\n    if (confidence > 0.4) return 'medium';\r\n    return 'low';\r\n  };\r\n\r\n  const getConfidenceIcon = (confidence) => {\r\n    if (confidence > 0.7) return '‚óè';\r\n    if (confidence > 0.4) return '‚óê';\r\n    return '‚óã';\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-group\">\r\n      {messages.map((message, index) => (\r\n        <div \r\n          key={message.id} \r\n          className={`message ${message.type}-message ${\r\n            message.confidence && getConfidenceLevel(message.confidence) === 'high' ? 'high-confidence' : ''\r\n          }`}\r\n          style={{ \r\n            animationDelay: `${index * 0.1}s`,\r\n            '--message-index': index \r\n          }}\r\n        >\r\n          <div className=\"message-content\">\r\n            <p>{message.text}</p>\r\n            \r\n            {/* Enhanced Confidence Indicator */}\r\n            {message.type === 'bot' && message.confidence && (\r\n              <div className=\"message-confidence\">\r\n                <span className={`confidence-indicator ${getConfidenceLevel(message.confidence)}`}>\r\n                  {getConfidenceIcon(message.confidence)}\r\n                </span>\r\n                <span className=\"confidence-text\">\r\n                  {Math.round(message.confidence * 100)}%\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Elegant Timestamp */}\r\n          <div className=\"message-timestamp\">\r\n            {formatTimestamp(message.timestamp)}\r\n            {message.type === 'user' && (\r\n              <span className=\"message-status\">\r\n                {message.status === 'delivered' ? '‚úì' : '‚è≥'}\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Dynamic Floating Suggestions */}\r\n          {message.type === 'bot' && message.suggestions && message.suggestions.length > 0 && (\r\n            <div className=\"message-suggestions\">\r\n              {message.suggestions.map((suggestion, suggestionIndex) => (\r\n                <button \r\n                  key={suggestionIndex}\r\n                  className=\"suggestion-button\"\r\n                  onClick={() => onSuggestionClick(suggestion)}\r\n                  style={{ \r\n                    animationDelay: `${(index * 0.1) + (suggestionIndex * 0.05)}s` \r\n                  }}\r\n                >\r\n                  <span className=\"suggestion-icon\">üí´</span>\r\n                  {suggestion}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageGroup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}