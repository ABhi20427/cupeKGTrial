{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY projects\\\\CupeKG\\\\cupe-kg-frontend\\\\src\\\\components\\\\ChatInterface\\\\ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useMapContext } from '../../context/MapContext';\nimport { askChatbot } from '../../services/api';\nimport MessageGroup from './MessageGroup';\nimport './ChatInterface.css';\nimport './MessageGroup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  isPanelOpen\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: 1,\n    type: 'bot',\n    text: '🙏 Namaste! I\\'m your CuPe-KG cultural heritage guide. Discover India\\'s rich history, explore magnificent monuments, and plan unforgettable heritage journeys.',\n    timestamp: new Date(),\n    status: 'delivered',\n    confidence: 0.95\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(true);\n  const [sessionId, setSessionId] = useState(null);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const chatMessagesRef = useRef(null); // NEW: Direct reference to chat messages container\n  const shouldScrollToBottom = useRef(true); // NEW: Control when to scroll\n\n  const mapContext = useMapContext();\n  const selectedLocation = mapContext === null || mapContext === void 0 ? void 0 : mapContext.selectedLocation;\n\n  // Initialize session ID\n  useEffect(() => {\n    if (!sessionId) {\n      setSessionId(Date.now().toString() + Math.random().toString(36));\n    }\n  }, [sessionId]);\n  const suggestions = [\"🏛️ Tell me about the history of Hampi\", \"🌅 What's the best time to visit Delhi?\", \"🧘 Show me the Buddhist trail route\", \"🎨 What dynasty built the Konark Sun Temple?\", \"🗺️ Suggest a 7-day cultural heritage tour\"];\n\n  // IMPROVED: More reliable scroll to bottom function\n  const scrollToBottom = useCallback(() => {\n    if (!shouldScrollToBottom.current) return;\n\n    // Multiple fallback methods to ensure scrolling works\n    const scrollToEnd = () => {\n      // Method 1: Use messagesEndRef if available\n      if (messagesEndRef.current) {\n        messagesEndRef.current.scrollIntoView({\n          behavior: 'smooth',\n          block: 'end',\n          inline: 'nearest'\n        });\n      }\n\n      // Method 2: Direct scroll on chat container\n      if (chatMessagesRef.current) {\n        chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n      }\n    };\n\n    // Execute scroll after DOM update\n    requestAnimationFrame(() => {\n      setTimeout(scrollToEnd, 10); // Small delay for DOM rendering\n    });\n  }, []);\n\n  // FIXED: Better scroll effect with proper dependencies\n  useEffect(() => {\n    // Only auto-scroll when messages change OR typing state changes\n    scrollToBottom();\n  }, [messages.length, isTyping, scrollToBottom]); // Changed from [messages] to [messages.length]\n\n  // NEW: Scroll when chat opens\n  useEffect(() => {\n    if (isOpen) {\n      setTimeout(() => {\n        shouldScrollToBottom.current = true;\n        scrollToBottom();\n      }, 300); // Wait for opening animation\n    }\n  }, [isOpen, scrollToBottom]);\n\n  // Check if user is near bottom to decide whether to auto-scroll\n  const handleScroll = useCallback(() => {\n    if (chatMessagesRef.current) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n      } = chatMessagesRef.current;\n      const isNearBottom = scrollTop + clientHeight >= scrollHeight - 50; // 50px threshold\n      shouldScrollToBottom.current = isNearBottom;\n    }\n  }, []);\n  useEffect(() => {\n    // Add contextual message when location changes\n    if (selectedLocation && sessionId) {\n      shouldScrollToBottom.current = true; // Always scroll for new contextual messages\n      const locationMessage = {\n        id: Date.now(),\n        type: 'bot',\n        text: `✨ I see you're exploring ${selectedLocation.name}! This ${selectedLocation.category} site has fascinating stories to tell. What would you like to know about it?`,\n        timestamp: new Date(),\n        confidence: 0.9,\n        suggestions: [`Tell me about ${selectedLocation.name}'s history`, `What makes ${selectedLocation.name} special?`, \"Show me nearby heritage sites\", \"Plan a visit to this location\"]\n      };\n      setMessages(prev => [...prev, locationMessage]);\n    }\n  }, [selectedLocation, sessionId]);\n  const toggleChat = useCallback(() => {\n    setIsOpen(!isOpen);\n    if (!isOpen) {\n      // When opening, ensure we scroll to bottom and focus input\n      setTimeout(() => {\n        var _inputRef$current;\n        shouldScrollToBottom.current = true;\n        scrollToBottom();\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }, 350);\n    }\n  }, [isOpen, scrollToBottom]);\n  const handleInputChange = useCallback(e => {\n    setInputValue(e.target.value);\n\n    // Auto-resize textarea\n    if (e.target.scrollHeight <= 120) {\n      e.target.style.height = 'auto';\n      e.target.style.height = e.target.scrollHeight + 'px';\n    }\n  }, []);\n  const handleKeyDown = useCallback(e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      if (inputValue.trim()) {\n        sendMessage();\n      }\n    }\n  }, [inputValue]);\n  const handleSuggestionClick = useCallback(suggestion => {\n    shouldScrollToBottom.current = true; // Always scroll for suggestions\n    setInputValue(suggestion);\n    setShowSuggestions(false);\n\n    // Auto-send suggestion or just populate input\n    setTimeout(() => {\n      sendMessage(suggestion);\n    }, 100);\n  }, []);\n\n  // ONLY CHANGE THIS SECTION IN YOUR EXISTING ChatInterface.jsx\n\n  const sendMessage = useCallback(async (messageText = null) => {\n    const textToSend = messageText || inputValue.trim();\n    if (!textToSend) return;\n    shouldScrollToBottom.current = true; // Always scroll for new user messages\n\n    // Create user message\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      text: textToSend,\n      timestamp: new Date(),\n      status: 'sending'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsTyping(true);\n    setShowSuggestions(false);\n\n    // Reset textarea height\n    if (inputRef.current) {\n      inputRef.current.style.height = '40px';\n    }\n    try {\n      // Update user message status\n      setMessages(prev => prev.map(msg => msg.id === userMessage.id ? {\n        ...msg,\n        status: 'delivered'\n      } : msg));\n\n      // Get bot response\n      const response = await askChatbot(textToSend, sessionId, selectedLocation);\n\n      // FIXED: Use 'answer' instead of 'response' field\n      const botMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        text: response.answer || \"I apologize, but I'm having trouble understanding that. Could you please rephrase your question about India's cultural heritage?\",\n        // ← CHANGED FROM response.response to response.answer\n        timestamp: new Date(),\n        confidence: response.confidence || 0.7,\n        suggestions: response.followUpQuestions || []\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error getting chatbot response:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        text: \"🔄 I apologize, but I'm experiencing some technical difficulties. Please try asking about a specific heritage site or check your connection.\",\n        timestamp: new Date(),\n        confidence: 0.3,\n        suggestions: [\"Tell me about the Taj Mahal\", \"What is the Golden Triangle route?\", \"Show me Buddhist heritage sites\"]\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  }, [inputValue, sessionId, selectedLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-widget ${isPanelOpen ? 'panel-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chat-toggle ${isOpen ? 'open' : ''}`,\n      onClick: toggleChat,\n      \"aria-label\": isOpen ? 'Close chat' : 'Open chat',\n      children: isOpen ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"currentColor\",\n          d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"currentColor\",\n          d: \"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-container ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            width: \"20\",\n            height: \"20\",\n            className: \"chat-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"CuPe-KG Heritage Guide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        ref: chatMessagesRef,\n        onScroll: handleScroll,\n        children: [/*#__PURE__*/_jsxDEV(MessageGroup, {\n          messages: messages,\n          onSuggestionClick: handleSuggestionClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot-message typing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"initial-suggestions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83C\\uDF1F Explore India's incredible heritage with me:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-buttons\",\n            children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-button\",\n              onClick: () => handleSuggestionClick(suggestion),\n              style: {\n                animationDelay: `${index * 0.1}s`\n              },\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef,\n          style: {\n            height: '1px',\n            width: '100%',\n            paddingBottom: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-input-container ${isTyping ? 'sending' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          className: \"chat-input\",\n          placeholder: \"Ask about India's heritage, monuments, or travel plans...\",\n          value: inputValue,\n          onChange: handleInputChange,\n          onKeyDown: handleKeyDown,\n          rows: \"1\",\n          style: {\n            height: '40px'\n          },\n          maxLength: 500,\n          \"aria-label\": \"Chat input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), inputValue.length > 400 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-counter\",\n          children: [inputValue.length, \"/500\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: () => sendMessage(),\n          disabled: !inputValue.trim() || isTyping,\n          \"aria-label\": isTyping ? \"Sending message...\" : \"Send message\",\n          children: isTyping ?\n          /*#__PURE__*/\n          // Loading spinner when sending\n          _jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            width: \"20\",\n            height: \"20\",\n            className: \"spinner\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this) :\n          /*#__PURE__*/\n          // Send arrow icon\n          _jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            width: \"20\",\n            height: \"20\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"1W637uuBMCaorqU2Y1akAlv0PS4=\", false, function () {\n  return [useMapContext];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMapContext","askChatbot","MessageGroup","jsxDEV","_jsxDEV","ChatInterface","isPanelOpen","_s","isOpen","setIsOpen","messages","setMessages","id","type","text","timestamp","Date","status","confidence","inputValue","setInputValue","isTyping","setIsTyping","showSuggestions","setShowSuggestions","sessionId","setSessionId","messagesEndRef","inputRef","chatMessagesRef","shouldScrollToBottom","mapContext","selectedLocation","now","toString","Math","random","suggestions","scrollToBottom","current","scrollToEnd","scrollIntoView","behavior","block","inline","scrollTop","scrollHeight","requestAnimationFrame","setTimeout","length","handleScroll","clientHeight","isNearBottom","locationMessage","name","category","prev","toggleChat","_inputRef$current","focus","handleInputChange","e","target","value","style","height","handleKeyDown","key","shiftKey","preventDefault","trim","sendMessage","handleSuggestionClick","suggestion","messageText","textToSend","userMessage","map","msg","response","botMessage","answer","followUpQuestions","error","console","errorMessage","className","children","onClick","viewBox","width","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","ref","onScroll","onSuggestionClick","index","animationDelay","paddingBottom","placeholder","onChange","onKeyDown","rows","maxLength","disabled","_c","$RefreshReg$"],"sources":["D:/MY projects/CupeKG/cupe-kg-frontend/src/components/ChatInterface/ChatInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useMapContext } from '../../context/MapContext';\r\nimport { askChatbot } from '../../services/api';\r\nimport MessageGroup from './MessageGroup';\r\nimport './ChatInterface.css';\r\nimport './MessageGroup.css';\r\n\r\nconst ChatInterface = ({ isPanelOpen }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      id: 1,\r\n      type: 'bot',\r\n      text: '🙏 Namaste! I\\'m your CuPe-KG cultural heritage guide. Discover India\\'s rich history, explore magnificent monuments, and plan unforgettable heritage journeys.',\r\n      timestamp: new Date(),\r\n      status: 'delivered',\r\n      confidence: 0.95\r\n    }\r\n  ]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [showSuggestions, setShowSuggestions] = useState(true);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  const chatMessagesRef = useRef(null); // NEW: Direct reference to chat messages container\r\n  const shouldScrollToBottom = useRef(true); // NEW: Control when to scroll\r\n  \r\n  const mapContext = useMapContext();\r\n  const selectedLocation = mapContext?.selectedLocation;\r\n\r\n  // Initialize session ID\r\n  useEffect(() => {\r\n    if (!sessionId) {\r\n      setSessionId(Date.now().toString() + Math.random().toString(36));\r\n    }\r\n  }, [sessionId]);\r\n\r\n  const suggestions = [\r\n    \"🏛️ Tell me about the history of Hampi\",\r\n    \"🌅 What's the best time to visit Delhi?\", \r\n    \"🧘 Show me the Buddhist trail route\",\r\n    \"🎨 What dynasty built the Konark Sun Temple?\",\r\n    \"🗺️ Suggest a 7-day cultural heritage tour\"\r\n  ];\r\n\r\n  // IMPROVED: More reliable scroll to bottom function\r\n  const scrollToBottom = useCallback(() => {\r\n    if (!shouldScrollToBottom.current) return;\r\n    \r\n    // Multiple fallback methods to ensure scrolling works\r\n    const scrollToEnd = () => {\r\n      // Method 1: Use messagesEndRef if available\r\n      if (messagesEndRef.current) {\r\n        messagesEndRef.current.scrollIntoView({ \r\n          behavior: 'smooth', \r\n          block: 'end',\r\n          inline: 'nearest' \r\n        });\r\n      }\r\n      \r\n      // Method 2: Direct scroll on chat container\r\n      if (chatMessagesRef.current) {\r\n        chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\r\n      }\r\n    };\r\n\r\n    // Execute scroll after DOM update\r\n    requestAnimationFrame(() => {\r\n      setTimeout(scrollToEnd, 10); // Small delay for DOM rendering\r\n    });\r\n  }, []);\r\n\r\n  // FIXED: Better scroll effect with proper dependencies\r\n  useEffect(() => {\r\n    // Only auto-scroll when messages change OR typing state changes\r\n    scrollToBottom();\r\n  }, [messages.length, isTyping, scrollToBottom]); // Changed from [messages] to [messages.length]\r\n\r\n  // NEW: Scroll when chat opens\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setTimeout(() => {\r\n        shouldScrollToBottom.current = true;\r\n        scrollToBottom();\r\n      }, 300); // Wait for opening animation\r\n    }\r\n  }, [isOpen, scrollToBottom]);\r\n\r\n  // Check if user is near bottom to decide whether to auto-scroll\r\n  const handleScroll = useCallback(() => {\r\n    if (chatMessagesRef.current) {\r\n      const { scrollTop, scrollHeight, clientHeight } = chatMessagesRef.current;\r\n      const isNearBottom = scrollTop + clientHeight >= scrollHeight - 50; // 50px threshold\r\n      shouldScrollToBottom.current = isNearBottom;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Add contextual message when location changes\r\n    if (selectedLocation && sessionId) {\r\n      shouldScrollToBottom.current = true; // Always scroll for new contextual messages\r\n      const locationMessage = {\r\n        id: Date.now(),\r\n        type: 'bot',\r\n        text: `✨ I see you're exploring ${selectedLocation.name}! This ${selectedLocation.category} site has fascinating stories to tell. What would you like to know about it?`,\r\n        timestamp: new Date(),\r\n        confidence: 0.9,\r\n        suggestions: [\r\n          `Tell me about ${selectedLocation.name}'s history`,\r\n          `What makes ${selectedLocation.name} special?`,\r\n          \"Show me nearby heritage sites\",\r\n          \"Plan a visit to this location\"\r\n        ]\r\n      };\r\n      \r\n      setMessages(prev => [...prev, locationMessage]);\r\n    }\r\n  }, [selectedLocation, sessionId]);\r\n\r\n  const toggleChat = useCallback(() => {\r\n    setIsOpen(!isOpen);\r\n    if (!isOpen) {\r\n      // When opening, ensure we scroll to bottom and focus input\r\n      setTimeout(() => {\r\n        shouldScrollToBottom.current = true;\r\n        scrollToBottom();\r\n        inputRef.current?.focus();\r\n      }, 350);\r\n    }\r\n  }, [isOpen, scrollToBottom]);\r\n\r\n  const handleInputChange = useCallback((e) => {\r\n    setInputValue(e.target.value);\r\n    \r\n    // Auto-resize textarea\r\n    if (e.target.scrollHeight <= 120) {\r\n      e.target.style.height = 'auto';\r\n      e.target.style.height = e.target.scrollHeight + 'px';\r\n    }\r\n  }, []);\r\n\r\n  const handleKeyDown = useCallback((e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      if (inputValue.trim()) {\r\n        sendMessage();\r\n      }\r\n    }\r\n  }, [inputValue]);\r\n\r\n  const handleSuggestionClick = useCallback((suggestion) => {\r\n    shouldScrollToBottom.current = true; // Always scroll for suggestions\r\n    setInputValue(suggestion);\r\n    setShowSuggestions(false);\r\n    \r\n    // Auto-send suggestion or just populate input\r\n    setTimeout(() => {\r\n      sendMessage(suggestion);\r\n    }, 100);\r\n  }, []);\r\n\r\n// ONLY CHANGE THIS SECTION IN YOUR EXISTING ChatInterface.jsx\r\n\r\n  const sendMessage = useCallback(async (messageText = null) => {\r\n    const textToSend = messageText || inputValue.trim();\r\n    if (!textToSend) return;\r\n\r\n    shouldScrollToBottom.current = true; // Always scroll for new user messages\r\n    \r\n    // Create user message\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user', \r\n      text: textToSend,\r\n      timestamp: new Date(),\r\n      status: 'sending'\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsTyping(true);\r\n    setShowSuggestions(false);\r\n\r\n    // Reset textarea height\r\n    if (inputRef.current) {\r\n      inputRef.current.style.height = '40px';\r\n    }\r\n\r\n    try {\r\n      // Update user message status\r\n      setMessages(prev => \r\n        prev.map(msg => \r\n          msg.id === userMessage.id \r\n            ? { ...msg, status: 'delivered' }\r\n            : msg\r\n        )\r\n      );\r\n\r\n      // Get bot response\r\n      const response = await askChatbot(textToSend, sessionId, selectedLocation);\r\n      \r\n      // FIXED: Use 'answer' instead of 'response' field\r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        text: response.answer || \"I apologize, but I'm having trouble understanding that. Could you please rephrase your question about India's cultural heritage?\", // ← CHANGED FROM response.response to response.answer\r\n        timestamp: new Date(),\r\n        confidence: response.confidence || 0.7,\r\n        suggestions: response.followUpQuestions || []\r\n      };\r\n      \r\n      setMessages(prev => [...prev, botMessage]);\r\n      \r\n    } catch (error) {\r\n      console.error('Error getting chatbot response:', error);\r\n      \r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        text: \"🔄 I apologize, but I'm experiencing some technical difficulties. Please try asking about a specific heritage site or check your connection.\",\r\n        timestamp: new Date(),\r\n        confidence: 0.3,\r\n        suggestions: [\r\n          \"Tell me about the Taj Mahal\",\r\n          \"What is the Golden Triangle route?\",\r\n          \"Show me Buddhist heritage sites\"\r\n        ]\r\n      };\r\n      \r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  }, [inputValue, sessionId, selectedLocation]);\r\n\r\n  return (\r\n    <div className={`chat-widget ${isPanelOpen ? 'panel-open' : ''}`}>\r\n      {/* Glassmorphism Floating Action Button */}\r\n      <button \r\n        className={`chat-toggle ${isOpen ? 'open' : ''}`} \r\n        onClick={toggleChat}\r\n        aria-label={isOpen ? 'Close chat' : 'Open chat'}\r\n      >\r\n        {isOpen ? (\r\n          <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n            <path fill=\"currentColor\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n          </svg>\r\n        ) : (\r\n          <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n            <path fill=\"currentColor\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"/>\r\n          </svg>\r\n        )}\r\n      </button>\r\n      \r\n      {/* Glassmorphism Chat Container */}\r\n      <div className={`chat-container ${isOpen ? 'open' : ''}`}>\r\n        {/* Glass Header */}\r\n        <div className=\"chat-header\">\r\n          <div className=\"chat-title\">\r\n            <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" className=\"chat-icon\">\r\n              <path fill=\"currentColor\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\r\n            </svg>\r\n            <span>CuPe-KG Heritage Guide</span>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Messages Area - FIXED with proper ref and scroll handling */}\r\n        <div \r\n          className=\"chat-messages\" \r\n          ref={chatMessagesRef}\r\n          onScroll={handleScroll}\r\n        >\r\n          <MessageGroup\r\n            messages={messages}\r\n            onSuggestionClick={handleSuggestionClick}\r\n          />\r\n          \r\n          {/* Enhanced Typing Indicator */}\r\n          {isTyping && (\r\n            <div className=\"message bot-message typing\">\r\n              <div className=\"typing-indicator\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Initial Suggestions with Glass Effect */}\r\n          {showSuggestions && (\r\n            <div className=\"initial-suggestions\">\r\n              <p>🌟 Explore India's incredible heritage with me:</p>\r\n              <div className=\"suggestion-buttons\">\r\n                {suggestions.map((suggestion, index) => (\r\n                  <button \r\n                    key={index}\r\n                    className=\"suggestion-button\"\r\n                    onClick={() => handleSuggestionClick(suggestion)}\r\n                    style={{ animationDelay: `${index * 0.1}s` }}\r\n                  >\r\n                    {suggestion}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* FIXED: Scroll anchor element */}\r\n          <div \r\n            ref={messagesEndRef} \r\n            style={{ \r\n              height: '1px', \r\n              width: '100%', \r\n              paddingBottom: '8px' \r\n            }} \r\n          />\r\n        </div>\r\n        \r\n        {/* Enhanced Glass Input Area */}\r\n        <div className={`chat-input-container ${isTyping ? 'sending' : ''}`}>\r\n          <textarea\r\n            ref={inputRef}\r\n            className=\"chat-input\"\r\n            placeholder=\"Ask about India's heritage, monuments, or travel plans...\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleKeyDown}\r\n            rows=\"1\"\r\n            style={{ height: '40px' }}\r\n            maxLength={500}\r\n            aria-label=\"Chat input\"\r\n          />\r\n          \r\n          {/* Optional Character Counter */}\r\n          {inputValue.length > 400 && (\r\n            <div className=\"input-counter\">\r\n              {inputValue.length}/500\r\n            </div>\r\n          )}\r\n          \r\n          {/* Optional Voice Input Button (for future enhancement) \r\n          <button \r\n            className=\"voice-button\"\r\n            onClick={() => {}}\r\n            aria-label=\"Voice input\"\r\n            style={{ display: 'none' }}\r\n          >\r\n            <svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\r\n              <path fill=\"currentColor\" d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\"/>\r\n              <path fill=\"currentColor\" d=\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\"/>\r\n            </svg>\r\n          </button>\r\n          */}\r\n          \r\n          {/* Enhanced Send Button */}\r\n          <button \r\n            className=\"send-button\" \r\n            onClick={() => sendMessage()}\r\n            disabled={!inputValue.trim() || isTyping}\r\n            aria-label={isTyping ? \"Sending message...\" : \"Send message\"}\r\n          >\r\n            {isTyping ? (\r\n              // Loading spinner when sending\r\n              <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" className=\"spinner\">\r\n                <path fill=\"currentColor\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\"/>\r\n              </svg>\r\n            ) : (\r\n              // Send arrow icon\r\n              <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\r\n                <path fill=\"currentColor\" d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/>\r\n              </svg>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}