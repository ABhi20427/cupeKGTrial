{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY projects\\\\CupeKG\\\\cupe-kg-frontend\\\\src\\\\data\\\\placeholderData.js\",\n  _s = $RefreshSig$();\n// components/Timeline/Timeline.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport { useMapContext } from '../../context/MapContext';\nimport './Timeline.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = () => {\n  _s();\n  const {\n    locations,\n    selectLocation\n  } = useMapContext();\n  const [periods, setPeriods] = useState([]);\n  const [activePeriod, setActivePeriod] = useState(null);\n  const [isExpanded, setIsExpanded] = useState(true); // Changed to true to start expanded\n\n  useEffect(() => {\n    // Extract unique periods from locations and sort them chronologically\n    const extractPeriods = () => {\n      const uniquePeriods = new Set();\n      locations.forEach(location => {\n        if (location.period) {\n          uniquePeriods.add(location.period);\n        }\n      });\n\n      // Convert to array and sort (custom sorting function for historical periods)\n      const periodArray = Array.from(uniquePeriods).sort((a, b) => {\n        // Extract starting years\n        const getStartYear = period => {\n          const match = period.match(/^(\\d+)/);\n          if (match) return parseInt(match[1]);\n\n          // Handle BCE/CE notation\n          if (period.includes('BCE')) return -parseInt(period.match(/(\\d+)/)[0]);\n\n          // For periods like \"6th century BCE\"\n          if (period.toLowerCase().includes('century bce')) {\n            const century = parseInt(period.match(/(\\d+)/)[0]);\n            return -(century * 100);\n          }\n\n          // For periods like \"5th century CE\"\n          if (period.toLowerCase().includes('century ce') || period.toLowerCase().includes('century')) {\n            const century = parseInt(period.match(/(\\d+)/)[0]);\n            return century * 100;\n          }\n          return 0; // Default for periods that can't be parsed\n        };\n        return getStartYear(a) - getStartYear(b);\n      });\n      return periodArray;\n    };\n    setPeriods(extractPeriods());\n\n    // Debug: Log the periods\n    console.log(\"Timeline periods:\", extractPeriods());\n  }, [locations]);\n\n  // Get locations for a specific period\n  const getLocationsForPeriod = period => {\n    return locations.filter(location => location.period === period);\n  };\n\n  // Handle period selection\n  const handlePeriodClick = period => {\n    setActivePeriod(period === activePeriod ? null : period);\n  };\n\n  // Handle location selection within a period\n  const handleLocationClick = location => {\n    selectLocation(location);\n  };\n\n  // Toggle expanded state of timeline\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `timeline-container ${isExpanded ? 'expanded' : 'collapsed'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-header\",\n      onClick: toggleExpand,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Time-Based Exploration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"expand-button\",\n        children: isExpanded ? 'âˆ’' : '+'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline\",\n        children: periods.map((period, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `timeline-period ${activePeriod === period ? 'active' : ''}`,\n          onClick: () => handlePeriodClick(period),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"period-marker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"period-label\",\n            children: period\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), activePeriod && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"period-locations\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Locations from \", activePeriod]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: getLocationsForPeriod(activePeriod).map(location => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleLocationClick(location),\n            className: \"location-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"location-name\",\n              children: location.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"location-dynasty\",\n              children: location.dynasty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this)]\n          }, location.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"/if2ZKRlw8An/A/994YOiGYFM4Q=\", false, function () {\n  return [useMapContext];\n});\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","useMapContext","jsxDEV","_jsxDEV","Timeline","_s","locations","selectLocation","periods","setPeriods","activePeriod","setActivePeriod","isExpanded","setIsExpanded","extractPeriods","uniquePeriods","Set","forEach","location","period","add","periodArray","Array","from","sort","a","b","getStartYear","match","parseInt","includes","toLowerCase","century","console","log","getLocationsForPeriod","filter","handlePeriodClick","handleLocationClick","toggleExpand","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","name","dynasty","id","_c","$RefreshReg$"],"sources":["D:/MY projects/CupeKG/cupe-kg-frontend/src/data/placeholderData.js"],"sourcesContent":["// components/Timeline/Timeline.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useMapContext } from '../../context/MapContext';\r\nimport './Timeline.css';\r\n\r\nconst Timeline = () => {\r\n  const { locations, selectLocation } = useMapContext();\r\n  const [periods, setPeriods] = useState([]);\r\n  const [activePeriod, setActivePeriod] = useState(null);\r\n  const [isExpanded, setIsExpanded] = useState(true); // Changed to true to start expanded\r\n\r\n  useEffect(() => {\r\n    // Extract unique periods from locations and sort them chronologically\r\n    const extractPeriods = () => {\r\n      const uniquePeriods = new Set();\r\n      \r\n      locations.forEach(location => {\r\n        if (location.period) {\r\n          uniquePeriods.add(location.period);\r\n        }\r\n      });\r\n      \r\n      // Convert to array and sort (custom sorting function for historical periods)\r\n      const periodArray = Array.from(uniquePeriods).sort((a, b) => {\r\n        // Extract starting years\r\n        const getStartYear = (period) => {\r\n          const match = period.match(/^(\\d+)/);\r\n          if (match) return parseInt(match[1]);\r\n          \r\n          // Handle BCE/CE notation\r\n          if (period.includes('BCE')) return -parseInt(period.match(/(\\d+)/)[0]);\r\n          \r\n          // For periods like \"6th century BCE\"\r\n          if (period.toLowerCase().includes('century bce')) {\r\n            const century = parseInt(period.match(/(\\d+)/)[0]);\r\n            return -(century * 100);\r\n          }\r\n          \r\n          // For periods like \"5th century CE\"\r\n          if (period.toLowerCase().includes('century ce') || period.toLowerCase().includes('century')) {\r\n            const century = parseInt(period.match(/(\\d+)/)[0]);\r\n            return century * 100;\r\n          }\r\n          \r\n          return 0; // Default for periods that can't be parsed\r\n        };\r\n        \r\n        return getStartYear(a) - getStartYear(b);\r\n      });\r\n      \r\n      return periodArray;\r\n    };\r\n    \r\n    setPeriods(extractPeriods());\r\n\r\n    // Debug: Log the periods\r\n    console.log(\"Timeline periods:\", extractPeriods());\r\n  }, [locations]);\r\n\r\n  // Get locations for a specific period\r\n  const getLocationsForPeriod = (period) => {\r\n    return locations.filter(location => location.period === period);\r\n  };\r\n\r\n  // Handle period selection\r\n  const handlePeriodClick = (period) => {\r\n    setActivePeriod(period === activePeriod ? null : period);\r\n  };\r\n\r\n  // Handle location selection within a period\r\n  const handleLocationClick = (location) => {\r\n    selectLocation(location);\r\n  };\r\n\r\n  // Toggle expanded state of timeline\r\n  const toggleExpand = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <div className={`timeline-container ${isExpanded ? 'expanded' : 'collapsed'}`}>\r\n      <div className=\"timeline-header\" onClick={toggleExpand}>\r\n        <h3>Time-Based Exploration</h3>\r\n        <button className=\"expand-button\">\r\n          {isExpanded ? 'âˆ’' : '+'}\r\n        </button>\r\n      </div>\r\n      \r\n      {isExpanded && (\r\n        <div className=\"timeline-content\">\r\n          <div className=\"timeline\">\r\n            {periods.map((period, index) => (\r\n              <div \r\n                key={index} \r\n                className={`timeline-period ${activePeriod === period ? 'active' : ''}`}\r\n                onClick={() => handlePeriodClick(period)}\r\n              >\r\n                <div className=\"period-marker\"></div>\r\n                <div className=\"period-label\">{period}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {activePeriod && (\r\n            <div className=\"period-locations\">\r\n              <h4>Locations from {activePeriod}</h4>\r\n              <ul>\r\n                {getLocationsForPeriod(activePeriod).map(location => (\r\n                  <li \r\n                    key={location.id}\r\n                    onClick={() => handleLocationClick(location)}\r\n                    className=\"location-item\"\r\n                  >\r\n                    <span className=\"location-name\">{location.name}</span>\r\n                    <span className=\"location-dynasty\">{location.dynasty}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,SAAS;IAAEC;EAAe,CAAC,GAAGN,aAAa,CAAC,CAAC;EACrD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;MAE/BV,SAAS,CAACW,OAAO,CAACC,QAAQ,IAAI;QAC5B,IAAIA,QAAQ,CAACC,MAAM,EAAE;UACnBJ,aAAa,CAACK,GAAG,CAACF,QAAQ,CAACC,MAAM,CAAC;QACpC;MACF,CAAC,CAAC;;MAEF;MACA,MAAME,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACR,aAAa,CAAC,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC3D;QACA,MAAMC,YAAY,GAAIR,MAAM,IAAK;UAC/B,MAAMS,KAAK,GAAGT,MAAM,CAACS,KAAK,CAAC,QAAQ,CAAC;UACpC,IAAIA,KAAK,EAAE,OAAOC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;;UAEpC;UACA,IAAIT,MAAM,CAACW,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,CAACD,QAAQ,CAACV,MAAM,CAACS,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEtE;UACA,IAAIT,MAAM,CAACY,WAAW,CAAC,CAAC,CAACD,QAAQ,CAAC,aAAa,CAAC,EAAE;YAChD,MAAME,OAAO,GAAGH,QAAQ,CAACV,MAAM,CAACS,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,OAAO,EAAEI,OAAO,GAAG,GAAG,CAAC;UACzB;;UAEA;UACA,IAAIb,MAAM,CAACY,WAAW,CAAC,CAAC,CAACD,QAAQ,CAAC,YAAY,CAAC,IAAIX,MAAM,CAACY,WAAW,CAAC,CAAC,CAACD,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC3F,MAAME,OAAO,GAAGH,QAAQ,CAACV,MAAM,CAACS,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,OAAOI,OAAO,GAAG,GAAG;UACtB;UAEA,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC;QAED,OAAOL,YAAY,CAACF,CAAC,CAAC,GAAGE,YAAY,CAACD,CAAC,CAAC;MAC1C,CAAC,CAAC;MAEF,OAAOL,WAAW;IACpB,CAAC;IAEDZ,UAAU,CAACK,cAAc,CAAC,CAAC,CAAC;;IAE5B;IACAmB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEpB,cAAc,CAAC,CAAC,CAAC;EACpD,CAAC,EAAE,CAACR,SAAS,CAAC,CAAC;;EAEf;EACA,MAAM6B,qBAAqB,GAAIhB,MAAM,IAAK;IACxC,OAAOb,SAAS,CAAC8B,MAAM,CAAClB,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAKA,MAAM,CAAC;EACjE,CAAC;;EAED;EACA,MAAMkB,iBAAiB,GAAIlB,MAAM,IAAK;IACpCR,eAAe,CAACQ,MAAM,KAAKT,YAAY,GAAG,IAAI,GAAGS,MAAM,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMmB,mBAAmB,GAAIpB,QAAQ,IAAK;IACxCX,cAAc,CAACW,QAAQ,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMqB,YAAY,GAAGA,CAAA,KAAM;IACzB1B,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,oBACET,OAAA;IAAKqC,SAAS,EAAE,sBAAsB5B,UAAU,GAAG,UAAU,GAAG,WAAW,EAAG;IAAA6B,QAAA,gBAC5EtC,OAAA;MAAKqC,SAAS,EAAC,iBAAiB;MAACE,OAAO,EAAEH,YAAa;MAAAE,QAAA,gBACrDtC,OAAA;QAAAsC,QAAA,EAAI;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/B3C,OAAA;QAAQqC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC9B7B,UAAU,GAAG,GAAG,GAAG;MAAG;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELlC,UAAU,iBACTT,OAAA;MAAKqC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtC,OAAA;QAAKqC,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtBjC,OAAO,CAACuC,GAAG,CAAC,CAAC5B,MAAM,EAAE6B,KAAK,kBACzB7C,OAAA;UAEEqC,SAAS,EAAE,mBAAmB9B,YAAY,KAAKS,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;UACxEuB,OAAO,EAAEA,CAAA,KAAML,iBAAiB,CAAClB,MAAM,CAAE;UAAAsB,QAAA,gBAEzCtC,OAAA;YAAKqC,SAAS,EAAC;UAAe;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACrC3C,OAAA;YAAKqC,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEtB;UAAM;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GALvCE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELpC,YAAY,iBACXP,OAAA;QAAKqC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BtC,OAAA;UAAAsC,QAAA,GAAI,iBAAe,EAAC/B,YAAY;QAAA;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtC3C,OAAA;UAAAsC,QAAA,EACGN,qBAAqB,CAACzB,YAAY,CAAC,CAACqC,GAAG,CAAC7B,QAAQ,iBAC/Cf,OAAA;YAEEuC,OAAO,EAAEA,CAAA,KAAMJ,mBAAmB,CAACpB,QAAQ,CAAE;YAC7CsB,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAEzBtC,OAAA;cAAMqC,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEvB,QAAQ,CAAC+B;YAAI;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtD3C,OAAA;cAAMqC,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAEvB,QAAQ,CAACgC;YAAO;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GALvD5B,QAAQ,CAACiC,EAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMd,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzC,EAAA,CAvHID,QAAQ;EAAA,QAC0BH,aAAa;AAAA;AAAAmD,EAAA,GAD/ChD,QAAQ;AAyHd,eAAeA,QAAQ;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}