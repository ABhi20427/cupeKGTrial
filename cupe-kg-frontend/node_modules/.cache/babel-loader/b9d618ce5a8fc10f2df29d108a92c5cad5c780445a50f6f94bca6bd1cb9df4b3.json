{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY projects\\\\CupeKG\\\\cupe-kg-frontend\\\\src\\\\components\\\\ChatInterface\\\\ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useMapContext } from '../../context/MapContext';\nimport MessageGroup from './MessageGroup';\nimport './ChatInterface.css';\nimport './MessageGroup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  isPanelOpen\n}) => {\n  _s();\n  // <-- ADD isPanelOpen prop\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: 1,\n    type: 'bot',\n    text: 'Hello! I\\'m your CuPe-KG guide. Ask me anything about Indian heritage sites, historical periods, or travel routes.',\n    timestamp: new Date(),\n    status: 'delivered'\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(true);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const mapContext = useMapContext();\n  const selectedLocation = mapContext === null || mapContext === void 0 ? void 0 : mapContext.selectedLocation;\n  const suggestions = [\"Tell me about the history of Hampi\", \"What is the best time to visit Delhi?\", \"Show me the Buddhist trail route\", \"What dynasty built the Konark Sun Temple?\", \"Suggest a 7-day cultural tour\"];\n  useEffect(() => {\n    // Scroll to bottom when messages change\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    // Add a context-aware message when location changes\n    if (selectedLocation) {\n      const locationMessage = {\n        id: Date.now(),\n        type: 'bot',\n        text: `I see you're exploring ${selectedLocation.name}. Would you like to know more about its history or cultural significance?`,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, locationMessage]);\n      setShowSuggestions(false);\n    }\n  }, [selectedLocation]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n    // Focus input when opening\n    if (!isOpen) {\n      const timeoutId = setTimeout(() => {\n        var _inputRef$current;\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }, 300);\n      return () => clearTimeout(timeoutId);\n    }\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleSuggestionClick = suggestion => {\n    sendMessage(suggestion);\n  };\n  const sendMessage = async (text = inputValue) => {\n    if (!text.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      text: text,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setShowSuggestions(false);\n    setIsTyping(true);\n    try {\n      // This would be an actual API call in production\n      // For now, simulate a response\n      // const response = await fetch('/api/chatbot/ask', {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify({ question: text, locationId: selectedLocation?.id })\n      // });\n      // const data = await response.json();\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      // Simulated responses\n      let responseText = '';\n      let followUpSuggestions = [];\n      if (text.toLowerCase().includes('hampi')) {\n        responseText = \"Hampi was the capital of the Vijayanagara Empire (1336-1646 CE), once one of the richest cities in the world. The ruins showcase stunning temple architecture, with highlights including the Virupaksha Temple and stone chariot at Vittala Temple. UNESCO recognized it as a World Heritage site due to its historical and architectural significance.\";\n        followUpSuggestions = [\"How do I reach Hampi?\", \"Best time to visit Hampi\", \"What are the must-see spots in Hampi?\"];\n      } else if (text.toLowerCase().includes('delhi')) {\n        responseText = \"Delhi has been continuously inhabited since the 6th century BCE and served as a capital for numerous empires. It hosts three UNESCO World Heritage sites: Qutub Minar, Red Fort, and Humayun's Tomb. The city's culture blends multiple influences including Persian, Turkish, and indigenous Indian traditions, reflecting its complex history.\";\n        followUpSuggestions = [\"What are Delhi's top monuments?\", \"Best season to visit Delhi\", \"Tell me about Delhi's cuisine\"];\n      } else if (text.toLowerCase().includes('buddhist') || text.toLowerCase().includes('trail') || text.toLowerCase().includes('route')) {\n        responseText = \"The Buddhist Trail connects key sites of Buddhist heritage across northern India. Major stops include Bodh Gaya (where Buddha attained enlightenment), Sarnath (where he gave his first sermon), and Kushinagar (where he attained parinirvana). The route offers spiritual significance and architectural marvels spanning over 2,500 years of history.\";\n        followUpSuggestions = [\"How many days for the Buddhist trail?\", \"Best season for this route\", \"Most important sites on this route\"];\n      } else {\n        responseText = \"I'd be happy to help you explore India's rich cultural heritage. You can ask about specific historical sites like Hampi or Delhi, learn about different historical periods and dynasties, or explore themed routes like the Buddhist Trail, Temple Route, or Mughal Architecture tour.\";\n        followUpSuggestions = suggestions;\n      }\n\n      // Add bot response\n      const botMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        text: responseText,\n        timestamp: new Date(),\n        suggestions: followUpSuggestions\n      };\n      setMessages(prev => [...prev, botMessage]);\n      setIsTyping(false);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n\n      // Add error message\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        text: \"I'm sorry, I couldn't process your request. Please try again later.\",\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      setIsTyping(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-wrapper ${isPanelOpen ? 'panel-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chat-toggle ${isOpen ? 'open' : ''}`,\n      onClick: toggleChat,\n      \"aria-label\": isOpen ? \"Close chat\" : \"Open chat\",\n      children: isOpen ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"currentColor\",\n          d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"currentColor\",\n          d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-container ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            width: \"20\",\n            height: \"20\",\n            className: \"chat-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M12 1c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11zM12 21c-5 0-9-4-9-9s4-9 9-9 9 4 9 9-4 9-9 9zM12 7c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zM12 13c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"CuPe-KG Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [/*#__PURE__*/_jsxDEV(MessageGroup, {\n          messages: messages,\n          onSuggestionClick: handleSuggestionClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot-message typing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"initial-suggestions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Here are some things you can ask:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-buttons\",\n            children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-button\",\n              onClick: () => handleSuggestionClick(suggestion),\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          className: \"chat-input\",\n          placeholder: \"Ask about Indian heritage...\",\n          value: inputValue,\n          onChange: handleInputChange,\n          onKeyDown: handleKeyDown,\n          rows: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: () => sendMessage(),\n          disabled: !inputValue.trim(),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            width: \"20\",\n            height: \"20\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"LgM1vI/6B9HNB7DETDcxK6w6PpU=\", false, function () {\n  return [useMapContext];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMapContext","MessageGroup","jsxDEV","_jsxDEV","ChatInterface","isPanelOpen","_s","isOpen","setIsOpen","messages","setMessages","id","type","text","timestamp","Date","status","inputValue","setInputValue","isTyping","setIsTyping","showSuggestions","setShowSuggestions","messagesEndRef","inputRef","mapContext","selectedLocation","suggestions","scrollToBottom","locationMessage","now","name","prev","_messagesEndRef$curre","current","scrollIntoView","behavior","toggleChat","timeoutId","setTimeout","_inputRef$current","focus","clearTimeout","handleInputChange","e","target","value","handleSuggestionClick","suggestion","sendMessage","trim","userMessage","Promise","resolve","responseText","followUpSuggestions","toLowerCase","includes","botMessage","error","console","errorMessage","handleKeyDown","key","shiftKey","preventDefault","className","children","onClick","viewBox","width","height","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","onSuggestionClick","map","index","ref","placeholder","onChange","onKeyDown","rows","disabled","_c","$RefreshReg$"],"sources":["D:/MY projects/CupeKG/cupe-kg-frontend/src/components/ChatInterface/ChatInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useMapContext } from '../../context/MapContext';\r\nimport MessageGroup from './MessageGroup';\r\nimport './ChatInterface.css';\r\nimport './MessageGroup.css';\r\n\r\nconst ChatInterface = ({ isPanelOpen }) => {  // <-- ADD isPanelOpen prop\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      id: 1,\r\n      type: 'bot',\r\n      text: 'Hello! I\\'m your CuPe-KG guide. Ask me anything about Indian heritage sites, historical periods, or travel routes.',\r\n      timestamp: new Date(),\r\n      status: 'delivered'\r\n    }\r\n  ]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [showSuggestions, setShowSuggestions] = useState(true);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  \r\n  const mapContext = useMapContext();\r\n  const selectedLocation = mapContext?.selectedLocation;\r\n\r\n  const suggestions = [\r\n    \"Tell me about the history of Hampi\",\r\n    \"What is the best time to visit Delhi?\",\r\n    \"Show me the Buddhist trail route\",\r\n    \"What dynasty built the Konark Sun Temple?\",\r\n    \"Suggest a 7-day cultural tour\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Scroll to bottom when messages change\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Add a context-aware message when location changes\r\n    if (selectedLocation) {\r\n      const locationMessage = {\r\n        id: Date.now(),\r\n        type: 'bot',\r\n        text: `I see you're exploring ${selectedLocation.name}. Would you like to know more about its history or cultural significance?`,\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prev => [...prev, locationMessage]);\r\n      setShowSuggestions(false);\r\n    }\r\n  }, [selectedLocation]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const toggleChat = () => {\r\n    setIsOpen(!isOpen);\r\n    // Focus input when opening\r\n    if (!isOpen) {\r\n      const timeoutId = setTimeout(() => {\r\n        inputRef.current?.focus();\r\n      }, 300);\r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    sendMessage(suggestion);\r\n  };\r\n\r\n  const sendMessage = async (text = inputValue) => {\r\n    if (!text.trim()) return;\r\n    \r\n    // Add user message\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      text: text,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setShowSuggestions(false);\r\n    setIsTyping(true);\r\n    \r\n    try {\r\n      // This would be an actual API call in production\r\n      // For now, simulate a response\r\n      // const response = await fetch('/api/chatbot/ask', {\r\n      //   method: 'POST',\r\n      //   headers: { 'Content-Type': 'application/json' },\r\n      //   body: JSON.stringify({ question: text, locationId: selectedLocation?.id })\r\n      // });\r\n      // const data = await response.json();\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      // Simulated responses\r\n      let responseText = '';\r\n      let followUpSuggestions = [];\r\n      \r\n      if (text.toLowerCase().includes('hampi')) {\r\n        responseText = \"Hampi was the capital of the Vijayanagara Empire (1336-1646 CE), once one of the richest cities in the world. The ruins showcase stunning temple architecture, with highlights including the Virupaksha Temple and stone chariot at Vittala Temple. UNESCO recognized it as a World Heritage site due to its historical and architectural significance.\";\r\n        followUpSuggestions = [\"How do I reach Hampi?\", \"Best time to visit Hampi\", \"What are the must-see spots in Hampi?\"];\r\n      } \r\n      else if (text.toLowerCase().includes('delhi')) {\r\n        responseText = \"Delhi has been continuously inhabited since the 6th century BCE and served as a capital for numerous empires. It hosts three UNESCO World Heritage sites: Qutub Minar, Red Fort, and Humayun's Tomb. The city's culture blends multiple influences including Persian, Turkish, and indigenous Indian traditions, reflecting its complex history.\";\r\n        followUpSuggestions = [\"What are Delhi's top monuments?\", \"Best season to visit Delhi\", \"Tell me about Delhi's cuisine\"];\r\n      }\r\n      else if (text.toLowerCase().includes('buddhist') || text.toLowerCase().includes('trail') || text.toLowerCase().includes('route')) {\r\n        responseText = \"The Buddhist Trail connects key sites of Buddhist heritage across northern India. Major stops include Bodh Gaya (where Buddha attained enlightenment), Sarnath (where he gave his first sermon), and Kushinagar (where he attained parinirvana). The route offers spiritual significance and architectural marvels spanning over 2,500 years of history.\";\r\n        followUpSuggestions = [\"How many days for the Buddhist trail?\", \"Best season for this route\", \"Most important sites on this route\"];\r\n      }\r\n      else {\r\n        responseText = \"I'd be happy to help you explore India's rich cultural heritage. You can ask about specific historical sites like Hampi or Delhi, learn about different historical periods and dynasties, or explore themed routes like the Buddhist Trail, Temple Route, or Mughal Architecture tour.\";\r\n        followUpSuggestions = suggestions;\r\n      }\r\n      \r\n      // Add bot response\r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        text: responseText,\r\n        timestamp: new Date(),\r\n        suggestions: followUpSuggestions\r\n      };\r\n      \r\n      setMessages(prev => [...prev, botMessage]);\r\n      setIsTyping(false);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      \r\n      // Add error message\r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        text: \"I'm sorry, I couldn't process your request. Please try again later.\",\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prev => [...prev, errorMessage]);\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`chat-wrapper ${isPanelOpen ? 'panel-open' : ''}`}>\r\n      <button \r\n        className={`chat-toggle ${isOpen ? 'open' : ''}`} \r\n        onClick={toggleChat}\r\n        aria-label={isOpen ? \"Close chat\" : \"Open chat\"}\r\n      >\r\n        {isOpen ? (\r\n          <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n            <path fill=\"currentColor\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n          </svg>\r\n        ) : (\r\n          <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n            <path fill=\"currentColor\" d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"/>\r\n          </svg>\r\n        )}\r\n      </button>\r\n      \r\n      <div className={`chat-container ${isOpen ? 'open' : ''}`}>\r\n        <div className=\"chat-header\">\r\n          <div className=\"chat-title\">\r\n            <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" className=\"chat-icon\">\r\n              <path fill=\"currentColor\" d=\"M12 1c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11zM12 21c-5 0-9-4-9-9s4-9 9-9 9 4 9 9-4 9-9 9zM12 7c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zM12 13c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"/>\r\n            </svg>\r\n            <span>CuPe-KG Assistant</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"chat-messages\">\r\n          <MessageGroup\r\n            messages={messages}\r\n            onSuggestionClick={handleSuggestionClick}\r\n          />\r\n          \r\n          {isTyping && (\r\n            <div className=\"message bot-message typing\">\r\n              <div className=\"typing-indicator\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {showSuggestions && (\r\n            <div className=\"initial-suggestions\">\r\n              <p>Here are some things you can ask:</p>\r\n              <div className=\"suggestion-buttons\">\r\n                {suggestions.map((suggestion, index) => (\r\n                  <button \r\n                    key={index}\r\n                    className=\"suggestion-button\"\r\n                    onClick={() => handleSuggestionClick(suggestion)}\r\n                  >\r\n                    {suggestion}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        \r\n        <div className=\"chat-input-container\">\r\n          <textarea\r\n            ref={inputRef}\r\n            className=\"chat-input\"\r\n            placeholder=\"Ask about Indian heritage...\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleKeyDown}\r\n            rows=\"1\"\r\n          />\r\n          <button \r\n            className=\"send-button\" \r\n            onClick={() => sendMessage()}\r\n            disabled={!inputValue.trim()}\r\n          >\r\n            <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\r\n              <path fill=\"currentColor\" d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}