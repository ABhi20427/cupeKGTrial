{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY projects\\\\CupeKG\\\\cupe-kg-frontend\\\\src\\\\components\\\\ChatInterface\\\\ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useMapContext } from '../../context/MapContext';\nimport { askChatbot } from '../../services/api';\nimport MessageGroup from './MessageGroup';\nimport './ChatInterface.css';\nimport './MessageGroup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  isPanelOpen\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: 1,\n    type: 'bot',\n    text: 'Hello! I\\'m your CuPe-KG guide. Ask me anything about Indian heritage sites, historical periods, or travel routes.',\n    timestamp: new Date(),\n    status: 'delivered'\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(true);\n  const [sessionId, setSessionId] = useState(null);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const mapContext = useMapContext();\n  const selectedLocation = mapContext === null || mapContext === void 0 ? void 0 : mapContext.selectedLocation;\n\n  // Initialize session ID\n  useEffect(() => {\n    if (!sessionId) {\n      setSessionId(Date.now().toString() + Math.random().toString(36));\n    }\n  }, []);\n  const suggestions = [\"Tell me about the history of Hampi\", \"What is the best time to visit Delhi?\", \"Show me the Buddhist trail route\", \"What dynasty built the Konark Sun Temple?\", \"Suggest a 7-day cultural tour\"];\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    // Add contextual message when location changes\n    if (selectedLocation && sessionId) {\n      const locationMessage = {\n        id: Date.now(),\n        type: 'bot',\n        text: `I see you're exploring ${selectedLocation.name}. Would you like to know more about its history, cultural significance, or visiting information?`,\n        timestamp: new Date(),\n        suggestions: [`Tell me about ${selectedLocation.name}'s history`, `Best time to visit ${selectedLocation.name}`, `Cultural significance of ${selectedLocation.name}`, `How to reach ${selectedLocation.name}`]\n      };\n      setMessages(prev => [...prev, locationMessage]);\n      setShowSuggestions(false);\n    }\n  }, [selectedLocation, sessionId]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n    if (!isOpen) {\n      const timeoutId = setTimeout(() => {\n        var _inputRef$current;\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }, 300);\n      return () => clearTimeout(timeoutId);\n    }\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  const handleSuggestionClick = suggestion => {\n    sendMessage(suggestion);\n  };\n  const sendMessage = async (text = inputValue) => {\n    if (!text.trim() || !sessionId) return;\n\n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      text: text,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setShowSuggestions(false);\n    setIsTyping(true);\n    try {\n      // **REAL API CALL** - This connects to your backend!\n      const response = await askChatbot(text, sessionId, selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.id);\n\n      // Create bot response message\n      const botMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        text: response.answer,\n        timestamp: new Date(),\n        confidence: response.confidence,\n        suggestions: response.followUpQuestions || []\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error getting chatbot response:', error);\n\n      // Fallback response on error\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        text: \"I'm sorry, I'm having trouble processing your request right now. Please try asking about a specific heritage site or historical period.\",\n        timestamp: new Date(),\n        suggestions: suggestions.slice(0, 3)\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-widget ${isPanelOpen ? 'panel-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chat-toggle ${isOpen ? 'open' : ''}`,\n      onClick: toggleChat,\n      children: isOpen ? /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"currentColor\",\n          d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"currentColor\",\n          d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-container ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            width: \"20\",\n            height: \"20\",\n            className: \"chat-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M12 1c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11zM12 21c-5 0-9-4-9-9s4-9 9-9 9 4 9 9-4 9-9 9zM12 7c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zM12 13c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"CuPe-KG Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [/*#__PURE__*/_jsxDEV(MessageGroup, {\n          messages: messages,\n          onSuggestionClick: handleSuggestionClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot-message typing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"initial-suggestions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Here are some things you can ask:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-buttons\",\n            children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-button\",\n              onClick: () => handleSuggestionClick(suggestion),\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: inputRef,\n          className: \"chat-input\",\n          placeholder: \"Ask about Indian heritage...\",\n          value: inputValue,\n          onChange: handleInputChange,\n          onKeyDown: handleKeyDown,\n          rows: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: () => sendMessage(),\n          disabled: !inputValue.trim(),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            width: \"20\",\n            height: \"20\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"7tIUepOyyTGrd4O2enefc0YgEk0=\", false, function () {\n  return [useMapContext];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMapContext","askChatbot","MessageGroup","jsxDEV","_jsxDEV","ChatInterface","isPanelOpen","_s","isOpen","setIsOpen","messages","setMessages","id","type","text","timestamp","Date","status","inputValue","setInputValue","isTyping","setIsTyping","showSuggestions","setShowSuggestions","sessionId","setSessionId","messagesEndRef","inputRef","mapContext","selectedLocation","now","toString","Math","random","suggestions","scrollToBottom","locationMessage","name","prev","_messagesEndRef$curre","current","scrollIntoView","behavior","toggleChat","timeoutId","setTimeout","_inputRef$current","focus","clearTimeout","handleInputChange","e","target","value","handleKeyDown","key","shiftKey","preventDefault","sendMessage","handleSuggestionClick","suggestion","trim","userMessage","response","botMessage","answer","confidence","followUpQuestions","error","console","errorMessage","slice","className","children","onClick","viewBox","width","height","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","onSuggestionClick","map","index","ref","placeholder","onChange","onKeyDown","rows","disabled","_c","$RefreshReg$"],"sources":["D:/MY projects/CupeKG/cupe-kg-frontend/src/components/ChatInterface/ChatInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useMapContext } from '../../context/MapContext';\r\nimport { askChatbot } from '../../services/api';\r\nimport MessageGroup from './MessageGroup';\r\nimport './ChatInterface.css';\r\nimport './MessageGroup.css';\r\n\r\nconst ChatInterface = ({ isPanelOpen }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      id: 1,\r\n      type: 'bot',\r\n      text: 'Hello! I\\'m your CuPe-KG guide. Ask me anything about Indian heritage sites, historical periods, or travel routes.',\r\n      timestamp: new Date(),\r\n      status: 'delivered'\r\n    }\r\n  ]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [showSuggestions, setShowSuggestions] = useState(true);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  \r\n  const mapContext = useMapContext();\r\n  const selectedLocation = mapContext?.selectedLocation;\r\n\r\n  // Initialize session ID\r\n  useEffect(() => {\r\n    if (!sessionId) {\r\n      setSessionId(Date.now().toString() + Math.random().toString(36));\r\n    }\r\n  }, []);\r\n\r\n  const suggestions = [\r\n    \"Tell me about the history of Hampi\",\r\n    \"What is the best time to visit Delhi?\", \r\n    \"Show me the Buddhist trail route\",\r\n    \"What dynasty built the Konark Sun Temple?\",\r\n    \"Suggest a 7-day cultural tour\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Add contextual message when location changes\r\n    if (selectedLocation && sessionId) {\r\n      const locationMessage = {\r\n        id: Date.now(),\r\n        type: 'bot',\r\n        text: `I see you're exploring ${selectedLocation.name}. Would you like to know more about its history, cultural significance, or visiting information?`,\r\n        timestamp: new Date(),\r\n        suggestions: [\r\n          `Tell me about ${selectedLocation.name}'s history`,\r\n          `Best time to visit ${selectedLocation.name}`,\r\n          `Cultural significance of ${selectedLocation.name}`,\r\n          `How to reach ${selectedLocation.name}`\r\n        ]\r\n      };\r\n      \r\n      setMessages(prev => [...prev, locationMessage]);\r\n      setShowSuggestions(false);\r\n    }\r\n  }, [selectedLocation, sessionId]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const toggleChat = () => {\r\n    setIsOpen(!isOpen);\r\n    if (!isOpen) {\r\n      const timeoutId = setTimeout(() => {\r\n        inputRef.current?.focus();\r\n      }, 300);\r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    sendMessage(suggestion);\r\n  };\r\n\r\n  const sendMessage = async (text = inputValue) => {\r\n    if (!text.trim() || !sessionId) return;\r\n    \r\n    // Add user message\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      text: text,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setShowSuggestions(false);\r\n    setIsTyping(true);\r\n    \r\n    try {\r\n      // **REAL API CALL** - This connects to your backend!\r\n      const response = await askChatbot(text, sessionId, selectedLocation?.id);\r\n      \r\n      // Create bot response message\r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        text: response.answer,\r\n        timestamp: new Date(),\r\n        confidence: response.confidence,\r\n        suggestions: response.followUpQuestions || []\r\n      };\r\n      \r\n      setMessages(prev => [...prev, botMessage]);\r\n      \r\n    } catch (error) {\r\n      console.error('Error getting chatbot response:', error);\r\n      \r\n      // Fallback response on error\r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        text: \"I'm sorry, I'm having trouble processing your request right now. Please try asking about a specific heritage site or historical period.\",\r\n        timestamp: new Date(),\r\n        suggestions: suggestions.slice(0, 3)\r\n      };\r\n      \r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`chat-widget ${isPanelOpen ? 'panel-open' : ''}`}>\r\n      <button className={`chat-toggle ${isOpen ? 'open' : ''}`} onClick={toggleChat}>\r\n        {isOpen ? (\r\n          <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n            <path fill=\"currentColor\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n          </svg>\r\n        ) : (\r\n          <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n            <path fill=\"currentColor\" d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"/>\r\n          </svg>\r\n        )}\r\n      </button>\r\n      \r\n      <div className={`chat-container ${isOpen ? 'open' : ''}`}>\r\n        <div className=\"chat-header\">\r\n          <div className=\"chat-title\">\r\n            <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" className=\"chat-icon\">\r\n              <path fill=\"currentColor\" d=\"M12 1c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11zM12 21c-5 0-9-4-9-9s4-9 9-9 9 4 9 9-4 9-9 9zM12 7c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zM12 13c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"/>\r\n            </svg>\r\n            <span>CuPe-KG Assistant</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"chat-messages\">\r\n          <MessageGroup\r\n            messages={messages}\r\n            onSuggestionClick={handleSuggestionClick}\r\n          />\r\n          \r\n          {isTyping && (\r\n            <div className=\"message bot-message typing\">\r\n              <div className=\"typing-indicator\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {showSuggestions && (\r\n            <div className=\"initial-suggestions\">\r\n              <p>Here are some things you can ask:</p>\r\n              <div className=\"suggestion-buttons\">\r\n                {suggestions.map((suggestion, index) => (\r\n                  <button \r\n                    key={index}\r\n                    className=\"suggestion-button\"\r\n                    onClick={() => handleSuggestionClick(suggestion)}\r\n                  >\r\n                    {suggestion}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        \r\n        <div className=\"chat-input-container\">\r\n          <textarea\r\n            ref={inputRef}\r\n            className=\"chat-input\"\r\n            placeholder=\"Ask about Indian heritage...\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleKeyDown}\r\n            rows=\"1\"\r\n          />\r\n          <button \r\n            className=\"send-button\" \r\n            onClick={() => sendMessage()}\r\n            disabled={!inputValue.trim()}\r\n          >\r\n            <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\">\r\n              <path fill=\"currentColor\" d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}