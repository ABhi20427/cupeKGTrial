{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY projects\\\\Major Project\\\\cupe-kg-frontend\\\\src\\\\context\\\\MapContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/MapContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContext = /*#__PURE__*/createContext();\nexport const useMapContext = () => {\n  _s();\n  return useContext(MapContext);\n};\n_s(useMapContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const MapProvider = ({\n  children\n}) => {\n  _s2();\n  const [locations, setLocations] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [locationData, setLocationData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [mapInstance, setMapInstance] = useState(null);\n\n  // Load initial locations\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        // In a real app, this would be an API call\n        // For now, using setTimeout to simulate API delay\n        setTimeout(() => {\n          // Load locations from JSON files\n          import('../data/placeholderData.js').then(module => {\n            setLocations(module.default || []);\n          });\n        }, 500);\n      } catch (error) {\n        console.error(\"Error loading locations:\", error);\n      }\n    };\n    fetchLocations();\n  }, []);\n\n  // When a location is selected, fetch its details\n  useEffect(() => {\n    if (!selectedLocation) {\n      setLocationData(null);\n      return;\n    }\n    const fetchLocationDetails = async () => {\n      setIsLoading(true);\n      try {\n        // In a real app, this would be an API call\n        // For now, we'll just use the same data for simplicity\n        setTimeout(() => {\n          setLocationData(selectedLocation);\n          setIsLoading(false);\n        }, 800);\n      } catch (error) {\n        console.error(\"Error loading location details:\", error);\n        setIsLoading(false);\n      }\n    };\n    fetchLocationDetails();\n  }, [selectedLocation]);\n\n  // Select a location\n  const selectLocation = location => {\n    setSelectedLocation(location);\n  };\n\n  // Select a route\n  const selectRoute = routeId => {\n    if ((selectedRoute === null || selectedRoute === void 0 ? void 0 : selectedRoute.id) === routeId) {\n      setSelectedRoute(null);\n      return;\n    }\n    setIsLoading(true);\n    // In a real app, fetch route data from API\n    import('../data/routes.js').then(module => {\n      const routes = module.default || [];\n      const route = routes.find(r => r.id === routeId);\n      setSelectedRoute(route);\n      setIsLoading(false);\n    });\n  };\n\n  // Clear all selections\n  const clearSelections = () => {\n    setSelectedLocation(null);\n    setLocationData(null);\n  };\n\n  // Reset map view\n  const resetMapView = () => {\n    if (mapInstance) {\n      mapInstance.setView([20.5937, 78.9629], 5, {\n        animate: true,\n        duration: 1\n      });\n    }\n    clearSelections();\n    setSelectedRoute(null);\n  };\n  return /*#__PURE__*/_jsxDEV(MapContext.Provider, {\n    value: {\n      locations,\n      selectedLocation,\n      locationData,\n      isLoading,\n      selectedRoute,\n      mapInstance,\n      setMapInstance,\n      selectLocation,\n      selectRoute,\n      clearSelections,\n      resetMapView\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s2(MapProvider, \"2nxCsOy0iiUbv95e+8HRKt4kSB4=\");\n_c = MapProvider;\nvar _c;\n$RefreshReg$(_c, \"MapProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","MapContext","useMapContext","_s","MapProvider","children","_s2","locations","setLocations","selectedLocation","setSelectedLocation","locationData","setLocationData","isLoading","setIsLoading","selectedRoute","setSelectedRoute","mapInstance","setMapInstance","fetchLocations","setTimeout","then","module","default","error","console","fetchLocationDetails","selectLocation","location","selectRoute","routeId","id","routes","route","find","r","clearSelections","resetMapView","setView","animate","duration","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MY projects/Major Project/cupe-kg-frontend/src/context/MapContext.js"],"sourcesContent":["// src/context/MapContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst MapContext = createContext();\r\n\r\nexport const useMapContext = () => useContext(MapContext);\r\n\r\nexport const MapProvider = ({ children }) => {\r\n  const [locations, setLocations] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [locationData, setLocationData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedRoute, setSelectedRoute] = useState(null);\r\n  const [mapInstance, setMapInstance] = useState(null);\r\n\r\n  // Load initial locations\r\n  useEffect(() => {\r\n    const fetchLocations = async () => {\r\n      try {\r\n        // In a real app, this would be an API call\r\n        // For now, using setTimeout to simulate API delay\r\n        setTimeout(() => {\r\n          // Load locations from JSON files\r\n          import('../data/placeholderData.js').then(module => {\r\n            setLocations(module.default || []);\r\n          });\r\n        }, 500);\r\n      } catch (error) {\r\n        console.error(\"Error loading locations:\", error);\r\n      }\r\n    };\r\n\r\n    fetchLocations();\r\n  }, []);\r\n\r\n  // When a location is selected, fetch its details\r\n  useEffect(() => {\r\n    if (!selectedLocation) {\r\n      setLocationData(null);\r\n      return;\r\n    }\r\n\r\n    const fetchLocationDetails = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        // In a real app, this would be an API call\r\n        // For now, we'll just use the same data for simplicity\r\n        setTimeout(() => {\r\n          setLocationData(selectedLocation);\r\n          setIsLoading(false);\r\n        }, 800);\r\n      } catch (error) {\r\n        console.error(\"Error loading location details:\", error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchLocationDetails();\r\n  }, [selectedLocation]);\r\n\r\n  // Select a location\r\n  const selectLocation = (location) => {\r\n    setSelectedLocation(location);\r\n  };\r\n\r\n  // Select a route\r\n  const selectRoute = (routeId) => {\r\n    if (selectedRoute?.id === routeId) {\r\n      setSelectedRoute(null);\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    // In a real app, fetch route data from API\r\n    import('../data/routes.js').then(module => {\r\n      const routes = module.default || [];\r\n      const route = routes.find(r => r.id === routeId);\r\n      setSelectedRoute(route);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  // Clear all selections\r\n  const clearSelections = () => {\r\n    setSelectedLocation(null);\r\n    setLocationData(null);\r\n  };\r\n\r\n  // Reset map view\r\n  const resetMapView = () => {\r\n    if (mapInstance) {\r\n      mapInstance.setView([20.5937, 78.9629], 5, { animate: true, duration: 1 });\r\n    }\r\n    clearSelections();\r\n    setSelectedRoute(null);\r\n  };\r\n\r\n  return (\r\n    <MapContext.Provider value={{\r\n      locations,\r\n      selectedLocation,\r\n      locationData,\r\n      isLoading,\r\n      selectedRoute,\r\n      mapInstance,\r\n      setMapInstance,\r\n      selectLocation,\r\n      selectRoute,\r\n      clearSelections,\r\n      resetMapView\r\n    }}>\r\n      {children}\r\n    </MapContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}