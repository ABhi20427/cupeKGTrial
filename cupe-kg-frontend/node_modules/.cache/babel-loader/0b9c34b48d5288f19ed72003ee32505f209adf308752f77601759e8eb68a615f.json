{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY projects\\\\CupeKG\\\\cupe-kg-frontend\\\\src\\\\components\\\\GraphVisualization\\\\GraphVisualization.jsx\",\n  _s = $RefreshSig$();\n// src/components/GraphVisualization/GraphVisualization.jsx\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useMapContext } from '../../context/MapContext';\nimport './GraphVisualization.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphVisualization = ({\n  isVisible,\n  onNodeClick,\n  onClose\n}) => {\n  _s();\n  var _nodes$find;\n  const canvasRef = useRef(null);\n  const {\n    locations,\n    selectedLocation,\n    selectLocation\n  } = useMapContext();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [draggedNode, setDraggedNode] = useState(null);\n  const [viewTransform, setViewTransform] = useState({\n    x: 0,\n    y: 0,\n    scale: 1\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMousePos, setLastMousePos] = useState({\n    x: 0,\n    y: 0\n  });\n  const animationRef = useRef(null);\n  const [showLegend, setShowLegend] = useState(true);\n  const [filterBy, setFilterBy] = useState('all'); // all, dynasty, category, period\n\n  const colors = {\n    dynasty: {\n      'Mughal Empire': '#ff9800',\n      'Vijayanagara Empire': '#4caf50',\n      'Chandela Dynasty': '#9c27b0',\n      'Eastern Ganga Dynasty': '#f44336',\n      'Satavahana and Vakataka': '#00bcd4',\n      'Rashtrakuta Dynasty': '#795548',\n      'Delhi Sultanate': '#607d8b',\n      'default': '#757575'\n    },\n    category: {\n      'historical': '#3f51b5',\n      'religious': '#e91e63',\n      'cultural': '#ff9800',\n      'default': '#757575'\n    },\n    edge: 'rgba(255, 255, 255, 0.3)',\n    text: '#ffffff',\n    selectedNode: '#ffeb3b',\n    hoveredNode: '#fff'\n  };\n\n  // Initialize graph data\n  useEffect(() => {\n    if (locations.length > 0) {\n      initializeGraph();\n    }\n  }, [locations]);\n\n  // Start animation loop\n  useEffect(() => {\n    if (isVisible && nodes.length > 0) {\n      startAnimation();\n    } else {\n      stopAnimation();\n    }\n    return () => stopAnimation();\n  }, [isVisible, nodes.length]);\n  const initializeGraph = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    // Create nodes from locations\n    const newNodes = locations.map((location, index) => {\n      const angle = index / locations.length * Math.PI * 2;\n      const radius = Math.min(centerX, centerY) * 0.6;\n      return {\n        id: location.id,\n        name: location.name,\n        category: location.category,\n        dynasty: location.dynasty,\n        period: location.period,\n        x: centerX + Math.cos(angle) * radius,\n        y: centerY + Math.sin(angle) * radius,\n        targetX: centerX + Math.cos(angle) * radius,\n        targetY: centerY + Math.sin(angle) * radius,\n        vx: 0,\n        vy: 0,\n        radius: 25,\n        mass: 1,\n        connections: 0,\n        data: location\n      };\n    });\n\n    // Create edges based on relationships\n    const newEdges = [];\n    newNodes.forEach((node1, i) => {\n      newNodes.forEach((node2, j) => {\n        if (i >= j) return; // Avoid duplicates and self-connections\n\n        let connectionStrength = 0;\n        let connectionType = [];\n\n        // Same dynasty connection\n        if (node1.dynasty === node2.dynasty && node1.dynasty) {\n          connectionStrength += 0.8;\n          connectionType.push('dynasty');\n        }\n\n        // Same category connection\n        if (node1.category === node2.category) {\n          connectionStrength += 0.6;\n          connectionType.push('category');\n        }\n\n        // Period overlap (simplified)\n        if (periodsOverlap(node1.period, node2.period)) {\n          connectionStrength += 0.4;\n          connectionType.push('period');\n        }\n\n        // Cultural similarity (based on tags/keywords)\n        const culturalSimilarity = calculateCulturalSimilarity(node1.data, node2.data);\n        if (culturalSimilarity > 0.3) {\n          connectionStrength += culturalSimilarity * 0.5;\n          connectionType.push('cultural');\n        }\n\n        // Create edge if connection is strong enough\n        if (connectionStrength > 0.3) {\n          newEdges.push({\n            source: node1.id,\n            target: node2.id,\n            strength: Math.min(connectionStrength, 1),\n            type: connectionType,\n            sourceNode: node1,\n            targetNode: node2\n          });\n          node1.connections++;\n          node2.connections++;\n        }\n      });\n    });\n\n    // Adjust node sizes based on connections\n    newNodes.forEach(node => {\n      node.radius = Math.max(20, Math.min(40, 20 + node.connections * 3));\n    });\n    setNodes(newNodes);\n    setEdges(newEdges);\n  };\n  const periodsOverlap = (period1, period2) => {\n    if (!period1 || !period2) return false;\n\n    // Extract years from periods (simplified)\n    const extractYear = period => {\n      const match = period.match(/(\\d{1,4})/);\n      return match ? parseInt(match[1]) : null;\n    };\n    const year1 = extractYear(period1);\n    const year2 = extractYear(period2);\n    if (!year1 || !year2) return false;\n\n    // Consider periods overlapping if within 200 years\n    return Math.abs(year1 - year2) < 200;\n  };\n  const calculateCulturalSimilarity = (loc1, loc2) => {\n    const tags1 = loc1.tags || [];\n    const tags2 = loc2.tags || [];\n    if (tags1.length === 0 || tags2.length === 0) return 0;\n    const commonTags = tags1.filter(tag => tags2.includes(tag));\n    return commonTags.length / Math.max(tags1.length, tags2.length);\n  };\n  const startAnimation = () => {\n    const animate = () => {\n      updatePhysics();\n      draw();\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    animate();\n  };\n  const stopAnimation = () => {\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n      animationRef.current = null;\n    }\n  };\n  const updatePhysics = () => {\n    const damping = 0.95;\n    const repulsionStrength = 2000;\n    const attractionStrength = 0.05;\n    const centeringForce = 0.02;\n    setNodes(prevNodes => {\n      const newNodes = [...prevNodes];\n\n      // Apply forces\n      newNodes.forEach((node, i) => {\n        if (node.id === (draggedNode === null || draggedNode === void 0 ? void 0 : draggedNode.id)) return; // Skip dragged node\n\n        let fx = 0,\n          fy = 0;\n\n        // Repulsion from other nodes\n        newNodes.forEach((other, j) => {\n          if (i === j) return;\n          const dx = node.x - other.x;\n          const dy = node.y - other.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance > 0) {\n            const force = repulsionStrength / (distance * distance);\n            fx += dx / distance * force;\n            fy += dy / distance * force;\n          }\n        });\n\n        // Attraction along edges\n        edges.forEach(edge => {\n          let other = null;\n          let direction = 1;\n          if (edge.sourceNode.id === node.id) {\n            other = edge.targetNode;\n          } else if (edge.targetNode.id === node.id) {\n            other = edge.sourceNode;\n            direction = -1;\n          }\n          if (other) {\n            const dx = other.x - node.x;\n            const dy = other.y - node.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n            const idealDistance = 150 * (1 - edge.strength * 0.5);\n            if (distance > idealDistance) {\n              const force = attractionStrength * edge.strength * (distance - idealDistance);\n              fx += dx / distance * force * direction;\n              fy += dy / distance * force * direction;\n            }\n          }\n        });\n\n        // Centering force\n        const canvas = canvasRef.current;\n        if (canvas) {\n          const centerX = canvas.width / 2;\n          const centerY = canvas.height / 2;\n          const dx = centerX - node.x;\n          const dy = centerY - node.y;\n          fx += dx * centeringForce;\n          fy += dy * centeringForce;\n        }\n\n        // Update velocity and position\n        node.vx = (node.vx + fx) * damping;\n        node.vy = (node.vy + fy) * damping;\n        node.x += node.vx;\n        node.y += node.vy;\n\n        // Boundary constraints\n        if (canvas) {\n          const margin = node.radius;\n          node.x = Math.max(margin, Math.min(canvas.width - margin, node.x));\n          node.y = Math.max(margin, Math.min(canvas.height - margin, node.y));\n        }\n      });\n      return newNodes;\n    });\n  };\n  const draw = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Apply transform\n    ctx.save();\n    ctx.translate(viewTransform.x, viewTransform.y);\n    ctx.scale(viewTransform.scale, viewTransform.scale);\n\n    // Draw edges\n    edges.forEach(edge => {\n      if (shouldShowEdge(edge)) {\n        drawEdge(ctx, edge);\n      }\n    });\n\n    // Draw nodes\n    nodes.forEach(node => {\n      if (shouldShowNode(node)) {\n        drawNode(ctx, node);\n      }\n    });\n    ctx.restore();\n  };\n  const shouldShowNode = node => {\n    if (filterBy === 'all') return true;\n    if (filterBy === 'dynasty') return node.dynasty;\n    if (filterBy === 'category') return node.category;\n    if (filterBy === 'period') return node.period;\n    return true;\n  };\n  const shouldShowEdge = edge => {\n    return shouldShowNode(edge.sourceNode) && shouldShowNode(edge.targetNode);\n  };\n  const drawEdge = (ctx, edge) => {\n    const {\n      sourceNode,\n      targetNode,\n      strength,\n      type\n    } = edge;\n    ctx.beginPath();\n    ctx.moveTo(sourceNode.x, sourceNode.y);\n    ctx.lineTo(targetNode.x, targetNode.y);\n\n    // Edge styling based on type\n    let strokeStyle = colors.edge;\n    let lineWidth = 2;\n    if (type.includes('dynasty')) {\n      strokeStyle = 'rgba(255, 152, 0, 0.6)';\n      lineWidth = 3;\n    } else if (type.includes('category')) {\n      strokeStyle = 'rgba(63, 81, 181, 0.4)';\n      lineWidth = 2;\n    } else if (type.includes('cultural')) {\n      strokeStyle = 'rgba(233, 30, 99, 0.4)';\n      lineWidth = 2;\n    }\n    ctx.strokeStyle = strokeStyle;\n    ctx.lineWidth = lineWidth * strength;\n    ctx.stroke();\n  };\n  const drawNode = (ctx, node) => {\n    const isSelected = (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.id) === node.id;\n    const isHovered = (hoveredNode === null || hoveredNode === void 0 ? void 0 : hoveredNode.id) === node.id;\n\n    // Node color based on current filter\n    let nodeColor = colors.category.default;\n    if (filterBy === 'dynasty') {\n      nodeColor = colors.dynasty[node.dynasty] || colors.dynasty.default;\n    } else if (filterBy === 'category') {\n      nodeColor = colors.category[node.category] || colors.category.default;\n    } else {\n      nodeColor = colors.category[node.category] || colors.category.default;\n    }\n\n    // Draw node circle\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, node.radius, 0, Math.PI * 2);\n    if (isSelected) {\n      ctx.fillStyle = colors.selectedNode;\n      ctx.shadowBlur = 20;\n      ctx.shadowColor = colors.selectedNode;\n    } else if (isHovered) {\n      ctx.fillStyle = colors.hoveredNode;\n      ctx.shadowBlur = 15;\n      ctx.shadowColor = nodeColor;\n    } else {\n      ctx.fillStyle = nodeColor;\n      ctx.shadowBlur = 10;\n      ctx.shadowColor = nodeColor;\n    }\n    ctx.fill();\n    ctx.shadowBlur = 0;\n\n    // Draw border\n    ctx.beginPath();\n    ctx.arc(node.x, node.y, node.radius, 0, Math.PI * 2);\n    ctx.strokeStyle = isSelected ? '#fff' : 'rgba(255, 255, 255, 0.8)';\n    ctx.lineWidth = isSelected ? 3 : 2;\n    ctx.stroke();\n\n    // Draw node label\n    ctx.fillStyle = colors.text;\n    ctx.font = `${isHovered || isSelected ? '14px' : '12px'} Arial`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    // Text with shadow for readability\n    ctx.shadowBlur = 3;\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.7)';\n    ctx.fillText(node.name, node.x, node.y);\n    ctx.shadowBlur = 0;\n\n    // Draw connection count\n    if (isHovered || isSelected) {\n      ctx.font = '10px Arial';\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n      ctx.fillText(`${node.connections} connections`, node.x, node.y + node.radius + 15);\n    }\n  };\n\n  // Mouse event handlers\n  const handleMouseDown = useCallback(e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const x = (e.clientX - rect.left - viewTransform.x) / viewTransform.scale;\n    const y = (e.clientY - rect.top - viewTransform.y) / viewTransform.scale;\n\n    // Check if clicking on a node\n    const clickedNode = nodes.find(node => {\n      const dx = x - node.x;\n      const dy = y - node.y;\n      return Math.sqrt(dx * dx + dy * dy) < node.radius;\n    });\n    if (clickedNode) {\n      setDraggedNode(clickedNode);\n      selectLocation(clickedNode.data);\n      if (onNodeClick) {\n        onNodeClick(clickedNode.data);\n      }\n    } else {\n      setIsDragging(true);\n      setLastMousePos({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  }, [nodes, viewTransform, selectLocation, onNodeClick]);\n  const handleMouseMove = useCallback(e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    if (isDragging) {\n      const dx = e.clientX - lastMousePos.x;\n      const dy = e.clientY - lastMousePos.y;\n      setViewTransform(prev => ({\n        ...prev,\n        x: prev.x + dx,\n        y: prev.y + dy\n      }));\n      setLastMousePos({\n        x: e.clientX,\n        y: e.clientY\n      });\n    } else if (draggedNode) {\n      const rect = canvas.getBoundingClientRect();\n      const x = (e.clientX - rect.left - viewTransform.x) / viewTransform.scale;\n      const y = (e.clientY - rect.top - viewTransform.y) / viewTransform.scale;\n      setNodes(prev => prev.map(node => node.id === draggedNode.id ? {\n        ...node,\n        x,\n        y,\n        vx: 0,\n        vy: 0\n      } : node));\n    } else {\n      // Check for hover\n      const rect = canvas.getBoundingClientRect();\n      const x = (e.clientX - rect.left - viewTransform.x) / viewTransform.scale;\n      const y = (e.clientY - rect.top - viewTransform.y) / viewTransform.scale;\n      const hoveredNode = nodes.find(node => {\n        const dx = x - node.x;\n        const dy = y - node.y;\n        return Math.sqrt(dx * dx + dy * dy) < node.radius;\n      });\n      setHoveredNode(hoveredNode || null);\n      canvas.style.cursor = hoveredNode ? 'pointer' : 'default';\n    }\n  }, [isDragging, draggedNode, lastMousePos, nodes, viewTransform]);\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false);\n    setDraggedNode(null);\n  }, []);\n  const handleWheel = useCallback(e => {\n    e.preventDefault();\n    const scaleChange = e.deltaY > 0 ? 0.9 : 1.1;\n    setViewTransform(prev => ({\n      ...prev,\n      scale: Math.max(0.1, Math.min(3, prev.scale * scaleChange))\n    }));\n  }, []);\n\n  // Setup event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('wheel', handleWheel);\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('wheel', handleWheel);\n    };\n  }, [handleMouseDown, handleMouseMove, handleMouseUp, handleWheel]);\n\n  // Reset view\n  const resetView = () => {\n    setViewTransform({\n      x: 0,\n      y: 0,\n      scale: 1\n    });\n  };\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cultural Heritage Knowledge Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterBy,\n          onChange: e => setFilterBy(e.target.value),\n          className: \"filter-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dynasty\",\n            children: \"By Dynasty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"category\",\n            children: \"By Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"period\",\n            children: \"By Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowLegend(!showLegend),\n          className: \"legend-toggle\",\n          children: [showLegend ? 'Hide' : 'Show', \" Legend\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetView,\n          className: \"reset-view\",\n          children: \"Reset View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-graph\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 600,\n      className: \"graph-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), showLegend && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Node Colors (\", filterBy, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this), filterBy === 'category' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: colors.category.historical\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Historical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: colors.category.religious\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Religious\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: colors.category.cultural\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Cultural\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 15\n        }, this), filterBy === 'dynasty' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-items\",\n          children: Object.entries(colors.dynasty).slice(0, -1).map(([dynasty, color]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: dynasty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 21\n            }, this)]\n          }, dynasty, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edge Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-line\",\n              style: {\n                backgroundColor: 'rgba(255, 152, 0, 0.6)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dynasty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-line\",\n              style: {\n                backgroundColor: 'rgba(63, 81, 181, 0.4)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-line\",\n              style: {\n                backgroundColor: 'rgba(233, 30, 99, 0.4)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Cultural\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interaction-help\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Interactions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Click nodes to select locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Drag nodes to reposition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Drag canvas to pan view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Scroll to zoom in/out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: nodes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Heritage Sites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: edges.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Connections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this), selectedLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: ((_nodes$find = nodes.find(n => n.id === selectedLocation.id)) === null || _nodes$find === void 0 ? void 0 : _nodes$find.connections) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Related Sites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 528,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphVisualization, \"dIWI2oh7TBqg3vxjNXBs3nIGyhI=\", false, function () {\n  return [useMapContext];\n});\n_c = GraphVisualization;\nexport default GraphVisualization;\nvar _c;\n$RefreshReg$(_c, \"GraphVisualization\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useMapContext","jsxDEV","_jsxDEV","GraphVisualization","isVisible","onNodeClick","onClose","_s","_nodes$find","canvasRef","locations","selectedLocation","selectLocation","nodes","setNodes","edges","setEdges","hoveredNode","setHoveredNode","draggedNode","setDraggedNode","viewTransform","setViewTransform","x","y","scale","isDragging","setIsDragging","lastMousePos","setLastMousePos","animationRef","showLegend","setShowLegend","filterBy","setFilterBy","colors","dynasty","category","edge","text","selectedNode","length","initializeGraph","startAnimation","stopAnimation","canvas","current","centerX","width","centerY","height","newNodes","map","location","index","angle","Math","PI","radius","min","id","name","period","cos","sin","targetX","targetY","vx","vy","mass","connections","data","newEdges","forEach","node1","i","node2","j","connectionStrength","connectionType","push","periodsOverlap","culturalSimilarity","calculateCulturalSimilarity","source","target","strength","type","sourceNode","targetNode","node","max","period1","period2","extractYear","match","parseInt","year1","year2","abs","loc1","loc2","tags1","tags","tags2","commonTags","filter","tag","includes","animate","updatePhysics","draw","requestAnimationFrame","cancelAnimationFrame","damping","repulsionStrength","attractionStrength","centeringForce","prevNodes","fx","fy","other","dx","dy","distance","sqrt","force","direction","idealDistance","margin","ctx","getContext","clearRect","save","translate","shouldShowEdge","drawEdge","shouldShowNode","drawNode","restore","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","isSelected","isHovered","nodeColor","default","arc","fillStyle","shadowBlur","shadowColor","fill","font","textAlign","textBaseline","fillText","handleMouseDown","e","rect","getBoundingClientRect","clientX","left","clientY","top","clickedNode","find","handleMouseMove","prev","style","cursor","handleMouseUp","handleWheel","preventDefault","scaleChange","deltaY","addEventListener","removeEventListener","resetView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onClick","ref","backgroundColor","historical","religious","cultural","Object","entries","slice","color","n","_c","$RefreshReg$"],"sources":["D:/MY projects/CupeKG/cupe-kg-frontend/src/components/GraphVisualization/GraphVisualization.jsx"],"sourcesContent":["// src/components/GraphVisualization/GraphVisualization.jsx\r\n\r\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useMapContext } from '../../context/MapContext';\r\nimport './GraphVisualization.css';\r\n\r\nconst GraphVisualization = ({ isVisible, onNodeClick, onClose }) => {\r\n  const canvasRef = useRef(null);\r\n  const { locations, selectedLocation, selectLocation } = useMapContext();\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [hoveredNode, setHoveredNode] = useState(null);\r\n  const [draggedNode, setDraggedNode] = useState(null);\r\n  const [viewTransform, setViewTransform] = useState({ x: 0, y: 0, scale: 1 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });\r\n  const animationRef = useRef(null);\r\n  const [showLegend, setShowLegend] = useState(true);\r\n  const [filterBy, setFilterBy] = useState('all'); // all, dynasty, category, period\r\n  \r\n  const colors = {\r\n    dynasty: {\r\n      'Mughal Empire': '#ff9800',\r\n      'Vijayanagara Empire': '#4caf50', \r\n      'Chandela Dynasty': '#9c27b0',\r\n      'Eastern Ganga Dynasty': '#f44336',\r\n      'Satavahana and Vakataka': '#00bcd4',\r\n      'Rashtrakuta Dynasty': '#795548',\r\n      'Delhi Sultanate': '#607d8b',\r\n      'default': '#757575'\r\n    },\r\n    category: {\r\n      'historical': '#3f51b5',\r\n      'religious': '#e91e63',\r\n      'cultural': '#ff9800',\r\n      'default': '#757575'\r\n    },\r\n    edge: 'rgba(255, 255, 255, 0.3)',\r\n    text: '#ffffff',\r\n    selectedNode: '#ffeb3b',\r\n    hoveredNode: '#fff'\r\n  };\r\n\r\n  // Initialize graph data\r\n  useEffect(() => {\r\n    if (locations.length > 0) {\r\n      initializeGraph();\r\n    }\r\n  }, [locations]);\r\n\r\n  // Start animation loop\r\n  useEffect(() => {\r\n    if (isVisible && nodes.length > 0) {\r\n      startAnimation();\r\n    } else {\r\n      stopAnimation();\r\n    }\r\n    \r\n    return () => stopAnimation();\r\n  }, [isVisible, nodes.length]);\r\n\r\n  const initializeGraph = () => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const centerX = canvas.width / 2;\r\n    const centerY = canvas.height / 2;\r\n\r\n    // Create nodes from locations\r\n    const newNodes = locations.map((location, index) => {\r\n      const angle = (index / locations.length) * Math.PI * 2;\r\n      const radius = Math.min(centerX, centerY) * 0.6;\r\n      \r\n      return {\r\n        id: location.id,\r\n        name: location.name,\r\n        category: location.category,\r\n        dynasty: location.dynasty,\r\n        period: location.period,\r\n        x: centerX + Math.cos(angle) * radius,\r\n        y: centerY + Math.sin(angle) * radius,\r\n        targetX: centerX + Math.cos(angle) * radius,\r\n        targetY: centerY + Math.sin(angle) * radius,\r\n        vx: 0,\r\n        vy: 0,\r\n        radius: 25,\r\n        mass: 1,\r\n        connections: 0,\r\n        data: location\r\n      };\r\n    });\r\n\r\n    // Create edges based on relationships\r\n    const newEdges = [];\r\n    \r\n    newNodes.forEach((node1, i) => {\r\n      newNodes.forEach((node2, j) => {\r\n        if (i >= j) return; // Avoid duplicates and self-connections\r\n        \r\n        let connectionStrength = 0;\r\n        let connectionType = [];\r\n        \r\n        // Same dynasty connection\r\n        if (node1.dynasty === node2.dynasty && node1.dynasty) {\r\n          connectionStrength += 0.8;\r\n          connectionType.push('dynasty');\r\n        }\r\n        \r\n        // Same category connection\r\n        if (node1.category === node2.category) {\r\n          connectionStrength += 0.6;\r\n          connectionType.push('category');\r\n        }\r\n        \r\n        // Period overlap (simplified)\r\n        if (periodsOverlap(node1.period, node2.period)) {\r\n          connectionStrength += 0.4;\r\n          connectionType.push('period');\r\n        }\r\n        \r\n        // Cultural similarity (based on tags/keywords)\r\n        const culturalSimilarity = calculateCulturalSimilarity(node1.data, node2.data);\r\n        if (culturalSimilarity > 0.3) {\r\n          connectionStrength += culturalSimilarity * 0.5;\r\n          connectionType.push('cultural');\r\n        }\r\n        \r\n        // Create edge if connection is strong enough\r\n        if (connectionStrength > 0.3) {\r\n          newEdges.push({\r\n            source: node1.id,\r\n            target: node2.id,\r\n            strength: Math.min(connectionStrength, 1),\r\n            type: connectionType,\r\n            sourceNode: node1,\r\n            targetNode: node2\r\n          });\r\n          \r\n          node1.connections++;\r\n          node2.connections++;\r\n        }\r\n      });\r\n    });\r\n\r\n    // Adjust node sizes based on connections\r\n    newNodes.forEach(node => {\r\n      node.radius = Math.max(20, Math.min(40, 20 + node.connections * 3));\r\n    });\r\n\r\n    setNodes(newNodes);\r\n    setEdges(newEdges);\r\n  };\r\n\r\n  const periodsOverlap = (period1, period2) => {\r\n    if (!period1 || !period2) return false;\r\n    \r\n    // Extract years from periods (simplified)\r\n    const extractYear = (period) => {\r\n      const match = period.match(/(\\d{1,4})/);\r\n      return match ? parseInt(match[1]) : null;\r\n    };\r\n    \r\n    const year1 = extractYear(period1);\r\n    const year2 = extractYear(period2);\r\n    \r\n    if (!year1 || !year2) return false;\r\n    \r\n    // Consider periods overlapping if within 200 years\r\n    return Math.abs(year1 - year2) < 200;\r\n  };\r\n\r\n  const calculateCulturalSimilarity = (loc1, loc2) => {\r\n    const tags1 = loc1.tags || [];\r\n    const tags2 = loc2.tags || [];\r\n    \r\n    if (tags1.length === 0 || tags2.length === 0) return 0;\r\n    \r\n    const commonTags = tags1.filter(tag => tags2.includes(tag));\r\n    return commonTags.length / Math.max(tags1.length, tags2.length);\r\n  };\r\n\r\n  const startAnimation = () => {\r\n    const animate = () => {\r\n      updatePhysics();\r\n      draw();\r\n      animationRef.current = requestAnimationFrame(animate);\r\n    };\r\n    animate();\r\n  };\r\n\r\n  const stopAnimation = () => {\r\n    if (animationRef.current) {\r\n      cancelAnimationFrame(animationRef.current);\r\n      animationRef.current = null;\r\n    }\r\n  };\r\n\r\n  const updatePhysics = () => {\r\n    const damping = 0.95;\r\n    const repulsionStrength = 2000;\r\n    const attractionStrength = 0.05;\r\n    const centeringForce = 0.02;\r\n\r\n    setNodes(prevNodes => {\r\n      const newNodes = [...prevNodes];\r\n      \r\n      // Apply forces\r\n      newNodes.forEach((node, i) => {\r\n        if (node.id === draggedNode?.id) return; // Skip dragged node\r\n        \r\n        let fx = 0, fy = 0;\r\n        \r\n        // Repulsion from other nodes\r\n        newNodes.forEach((other, j) => {\r\n          if (i === j) return;\r\n          const dx = node.x - other.x;\r\n          const dy = node.y - other.y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          \r\n          if (distance > 0) {\r\n            const force = repulsionStrength / (distance * distance);\r\n            fx += (dx / distance) * force;\r\n            fy += (dy / distance) * force;\r\n          }\r\n        });\r\n        \r\n        // Attraction along edges\r\n        edges.forEach(edge => {\r\n          let other = null;\r\n          let direction = 1;\r\n          \r\n          if (edge.sourceNode.id === node.id) {\r\n            other = edge.targetNode;\r\n          } else if (edge.targetNode.id === node.id) {\r\n            other = edge.sourceNode;\r\n            direction = -1;\r\n          }\r\n          \r\n          if (other) {\r\n            const dx = other.x - node.x;\r\n            const dy = other.y - node.y;\r\n            const distance = Math.sqrt(dx * dx + dy * dy);\r\n            const idealDistance = 150 * (1 - edge.strength * 0.5);\r\n            \r\n            if (distance > idealDistance) {\r\n              const force = attractionStrength * edge.strength * (distance - idealDistance);\r\n              fx += (dx / distance) * force * direction;\r\n              fy += (dy / distance) * force * direction;\r\n            }\r\n          }\r\n        });\r\n        \r\n        // Centering force\r\n        const canvas = canvasRef.current;\r\n        if (canvas) {\r\n          const centerX = canvas.width / 2;\r\n          const centerY = canvas.height / 2;\r\n          const dx = centerX - node.x;\r\n          const dy = centerY - node.y;\r\n          fx += dx * centeringForce;\r\n          fy += dy * centeringForce;\r\n        }\r\n        \r\n        // Update velocity and position\r\n        node.vx = (node.vx + fx) * damping;\r\n        node.vy = (node.vy + fy) * damping;\r\n        \r\n        node.x += node.vx;\r\n        node.y += node.vy;\r\n        \r\n        // Boundary constraints\r\n        if (canvas) {\r\n          const margin = node.radius;\r\n          node.x = Math.max(margin, Math.min(canvas.width - margin, node.x));\r\n          node.y = Math.max(margin, Math.min(canvas.height - margin, node.y));\r\n        }\r\n      });\r\n      \r\n      return newNodes;\r\n    });\r\n  };\r\n\r\n  const draw = () => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    \r\n    // Apply transform\r\n    ctx.save();\r\n    ctx.translate(viewTransform.x, viewTransform.y);\r\n    ctx.scale(viewTransform.scale, viewTransform.scale);\r\n    \r\n    // Draw edges\r\n    edges.forEach(edge => {\r\n      if (shouldShowEdge(edge)) {\r\n        drawEdge(ctx, edge);\r\n      }\r\n    });\r\n    \r\n    // Draw nodes\r\n    nodes.forEach(node => {\r\n      if (shouldShowNode(node)) {\r\n        drawNode(ctx, node);\r\n      }\r\n    });\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  const shouldShowNode = (node) => {\r\n    if (filterBy === 'all') return true;\r\n    if (filterBy === 'dynasty') return node.dynasty;\r\n    if (filterBy === 'category') return node.category;\r\n    if (filterBy === 'period') return node.period;\r\n    return true;\r\n  };\r\n\r\n  const shouldShowEdge = (edge) => {\r\n    return shouldShowNode(edge.sourceNode) && shouldShowNode(edge.targetNode);\r\n  };\r\n\r\n  const drawEdge = (ctx, edge) => {\r\n    const { sourceNode, targetNode, strength, type } = edge;\r\n    \r\n    ctx.beginPath();\r\n    ctx.moveTo(sourceNode.x, sourceNode.y);\r\n    ctx.lineTo(targetNode.x, targetNode.y);\r\n    \r\n    // Edge styling based on type\r\n    let strokeStyle = colors.edge;\r\n    let lineWidth = 2;\r\n    \r\n    if (type.includes('dynasty')) {\r\n      strokeStyle = 'rgba(255, 152, 0, 0.6)';\r\n      lineWidth = 3;\r\n    } else if (type.includes('category')) {\r\n      strokeStyle = 'rgba(63, 81, 181, 0.4)';\r\n      lineWidth = 2;\r\n    } else if (type.includes('cultural')) {\r\n      strokeStyle = 'rgba(233, 30, 99, 0.4)';\r\n      lineWidth = 2;\r\n    }\r\n    \r\n    ctx.strokeStyle = strokeStyle;\r\n    ctx.lineWidth = lineWidth * strength;\r\n    ctx.stroke();\r\n  };\r\n\r\n  const drawNode = (ctx, node) => {\r\n    const isSelected = selectedLocation?.id === node.id;\r\n    const isHovered = hoveredNode?.id === node.id;\r\n    \r\n    // Node color based on current filter\r\n    let nodeColor = colors.category.default;\r\n    if (filterBy === 'dynasty') {\r\n      nodeColor = colors.dynasty[node.dynasty] || colors.dynasty.default;\r\n    } else if (filterBy === 'category') {\r\n      nodeColor = colors.category[node.category] || colors.category.default;\r\n    } else {\r\n      nodeColor = colors.category[node.category] || colors.category.default;\r\n    }\r\n    \r\n    // Draw node circle\r\n    ctx.beginPath();\r\n    ctx.arc(node.x, node.y, node.radius, 0, Math.PI * 2);\r\n    \r\n    if (isSelected) {\r\n      ctx.fillStyle = colors.selectedNode;\r\n      ctx.shadowBlur = 20;\r\n      ctx.shadowColor = colors.selectedNode;\r\n    } else if (isHovered) {\r\n      ctx.fillStyle = colors.hoveredNode;\r\n      ctx.shadowBlur = 15;\r\n      ctx.shadowColor = nodeColor;\r\n    } else {\r\n      ctx.fillStyle = nodeColor;\r\n      ctx.shadowBlur = 10;\r\n      ctx.shadowColor = nodeColor;\r\n    }\r\n    \r\n    ctx.fill();\r\n    ctx.shadowBlur = 0;\r\n    \r\n    // Draw border\r\n    ctx.beginPath();\r\n    ctx.arc(node.x, node.y, node.radius, 0, Math.PI * 2);\r\n    ctx.strokeStyle = isSelected ? '#fff' : 'rgba(255, 255, 255, 0.8)';\r\n    ctx.lineWidth = isSelected ? 3 : 2;\r\n    ctx.stroke();\r\n    \r\n    // Draw node label\r\n    ctx.fillStyle = colors.text;\r\n    ctx.font = `${isHovered || isSelected ? '14px' : '12px'} Arial`;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    \r\n    // Text with shadow for readability\r\n    ctx.shadowBlur = 3;\r\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.7)';\r\n    ctx.fillText(node.name, node.x, node.y);\r\n    ctx.shadowBlur = 0;\r\n    \r\n    // Draw connection count\r\n    if (isHovered || isSelected) {\r\n      ctx.font = '10px Arial';\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\r\n      ctx.fillText(\r\n        `${node.connections} connections`, \r\n        node.x, \r\n        node.y + node.radius + 15\r\n      );\r\n    }\r\n  };\r\n\r\n  // Mouse event handlers\r\n  const handleMouseDown = useCallback((e) => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    \r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = (e.clientX - rect.left - viewTransform.x) / viewTransform.scale;\r\n    const y = (e.clientY - rect.top - viewTransform.y) / viewTransform.scale;\r\n    \r\n    // Check if clicking on a node\r\n    const clickedNode = nodes.find(node => {\r\n      const dx = x - node.x;\r\n      const dy = y - node.y;\r\n      return Math.sqrt(dx * dx + dy * dy) < node.radius;\r\n    });\r\n    \r\n    if (clickedNode) {\r\n      setDraggedNode(clickedNode);\r\n      selectLocation(clickedNode.data);\r\n      if (onNodeClick) {\r\n        onNodeClick(clickedNode.data);\r\n      }\r\n    } else {\r\n      setIsDragging(true);\r\n      setLastMousePos({ x: e.clientX, y: e.clientY });\r\n    }\r\n  }, [nodes, viewTransform, selectLocation, onNodeClick]);\r\n\r\n  const handleMouseMove = useCallback((e) => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    \r\n    if (isDragging) {\r\n      const dx = e.clientX - lastMousePos.x;\r\n      const dy = e.clientY - lastMousePos.y;\r\n      \r\n      setViewTransform(prev => ({\r\n        ...prev,\r\n        x: prev.x + dx,\r\n        y: prev.y + dy\r\n      }));\r\n      \r\n      setLastMousePos({ x: e.clientX, y: e.clientY });\r\n    } else if (draggedNode) {\r\n      const rect = canvas.getBoundingClientRect();\r\n      const x = (e.clientX - rect.left - viewTransform.x) / viewTransform.scale;\r\n      const y = (e.clientY - rect.top - viewTransform.y) / viewTransform.scale;\r\n      \r\n      setNodes(prev => prev.map(node => \r\n        node.id === draggedNode.id \r\n          ? { ...node, x, y, vx: 0, vy: 0 }\r\n          : node\r\n      ));\r\n    } else {\r\n      // Check for hover\r\n      const rect = canvas.getBoundingClientRect();\r\n      const x = (e.clientX - rect.left - viewTransform.x) / viewTransform.scale;\r\n      const y = (e.clientY - rect.top - viewTransform.y) / viewTransform.scale;\r\n      \r\n      const hoveredNode = nodes.find(node => {\r\n        const dx = x - node.x;\r\n        const dy = y - node.y;\r\n        return Math.sqrt(dx * dx + dy * dy) < node.radius;\r\n      });\r\n      \r\n      setHoveredNode(hoveredNode || null);\r\n      canvas.style.cursor = hoveredNode ? 'pointer' : 'default';\r\n    }\r\n  }, [isDragging, draggedNode, lastMousePos, nodes, viewTransform]);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    setIsDragging(false);\r\n    setDraggedNode(null);\r\n  }, []);\r\n\r\n  const handleWheel = useCallback((e) => {\r\n    e.preventDefault();\r\n    const scaleChange = e.deltaY > 0 ? 0.9 : 1.1;\r\n    \r\n    setViewTransform(prev => ({\r\n      ...prev,\r\n      scale: Math.max(0.1, Math.min(3, prev.scale * scaleChange))\r\n    }));\r\n  }, []);\r\n\r\n  // Setup event listeners\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    \r\n    canvas.addEventListener('mousedown', handleMouseDown);\r\n    canvas.addEventListener('mousemove', handleMouseMove);\r\n    canvas.addEventListener('mouseup', handleMouseUp);\r\n    canvas.addEventListener('wheel', handleWheel);\r\n    \r\n    return () => {\r\n      canvas.removeEventListener('mousedown', handleMouseDown);\r\n      canvas.removeEventListener('mousemove', handleMouseMove);\r\n      canvas.removeEventListener('mouseup', handleMouseUp);\r\n      canvas.removeEventListener('wheel', handleWheel);\r\n    };\r\n  }, [handleMouseDown, handleMouseMove, handleMouseUp, handleWheel]);\r\n\r\n  // Reset view\r\n  const resetView = () => {\r\n    setViewTransform({ x: 0, y: 0, scale: 1 });\r\n  };\r\n\r\n  if (!isVisible) return null;\r\n\r\n  return (\r\n    <div className=\"graph-visualization\">\r\n      <div className=\"graph-header\">\r\n        <h2>Cultural Heritage Knowledge Graph</h2>\r\n        <div className=\"graph-controls\">\r\n          <select \r\n            value={filterBy} \r\n            onChange={(e) => setFilterBy(e.target.value)}\r\n            className=\"filter-select\"\r\n          >\r\n            <option value=\"all\">All Connections</option>\r\n            <option value=\"dynasty\">By Dynasty</option>\r\n            <option value=\"category\">By Category</option>\r\n            <option value=\"period\">By Period</option>\r\n          </select>\r\n          \r\n          <button onClick={() => setShowLegend(!showLegend)} className=\"legend-toggle\">\r\n            {showLegend ? 'Hide' : 'Show'} Legend\r\n          </button>\r\n          \r\n          <button onClick={resetView} className=\"reset-view\">\r\n            Reset View\r\n          </button>\r\n          \r\n          <button onClick={onClose} className=\"close-graph\">\r\n            ×\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <canvas\r\n        ref={canvasRef}\r\n        width={800}\r\n        height={600}\r\n        className=\"graph-canvas\"\r\n      />\r\n      \r\n      {showLegend && (\r\n        <div className=\"graph-legend\">\r\n          <h3>Legend</h3>\r\n          <div className=\"legend-section\">\r\n            <h4>Node Colors ({filterBy})</h4>\r\n            {filterBy === 'category' && (\r\n              <div className=\"legend-items\">\r\n                <div className=\"legend-item\">\r\n                  <div className=\"legend-color\" style={{ backgroundColor: colors.category.historical }}></div>\r\n                  <span>Historical</span>\r\n                </div>\r\n                <div className=\"legend-item\">\r\n                  <div className=\"legend-color\" style={{ backgroundColor: colors.category.religious }}></div>\r\n                  <span>Religious</span>\r\n                </div>\r\n                <div className=\"legend-item\">\r\n                  <div className=\"legend-color\" style={{ backgroundColor: colors.category.cultural }}></div>\r\n                  <span>Cultural</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {filterBy === 'dynasty' && (\r\n              <div className=\"legend-items\">\r\n                {Object.entries(colors.dynasty).slice(0, -1).map(([dynasty, color]) => (\r\n                  <div key={dynasty} className=\"legend-item\">\r\n                    <div className=\"legend-color\" style={{ backgroundColor: color }}></div>\r\n                    <span>{dynasty}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"legend-section\">\r\n            <h4>Edge Types</h4>\r\n            <div className=\"legend-items\">\r\n              <div className=\"legend-item\">\r\n                <div className=\"legend-line\" style={{ backgroundColor: 'rgba(255, 152, 0, 0.6)' }}></div>\r\n                <span>Dynasty</span>\r\n              </div>\r\n              <div className=\"legend-item\">\r\n                <div className=\"legend-line\" style={{ backgroundColor: 'rgba(63, 81, 181, 0.4)' }}></div>\r\n                <span>Category</span>\r\n              </div>\r\n              <div className=\"legend-item\">\r\n                <div className=\"legend-line\" style={{ backgroundColor: 'rgba(233, 30, 99, 0.4)' }}></div>\r\n                <span>Cultural</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"interaction-help\">\r\n            <p><strong>Interactions:</strong></p>\r\n            <p>• Click nodes to select locations</p>\r\n            <p>• Drag nodes to reposition</p>\r\n            <p>• Drag canvas to pan view</p>\r\n            <p>• Scroll to zoom in/out</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"graph-stats\">\r\n        <div className=\"stat\">\r\n          <span className=\"stat-value\">{nodes.length}</span>\r\n          <span className=\"stat-label\">Heritage Sites</span>\r\n        </div>\r\n        <div className=\"stat\">\r\n          <span className=\"stat-value\">{edges.length}</span>\r\n          <span className=\"stat-label\">Connections</span>\r\n        </div>\r\n        {selectedLocation && (\r\n          <div className=\"stat\">\r\n            <span className=\"stat-value\">{nodes.find(n => n.id === selectedLocation.id)?.connections || 0}</span>\r\n            <span className=\"stat-label\">Related Sites</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}