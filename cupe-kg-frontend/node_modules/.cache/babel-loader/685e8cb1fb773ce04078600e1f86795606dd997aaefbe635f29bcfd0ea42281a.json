{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY projects\\\\CupeKG\\\\cupe-kg-frontend\\\\src\\\\components\\\\ChatInterface\\\\MessageGroup.jsx\";\nimport React from 'react';\nimport './MessageGroup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageGroup = ({\n  messages,\n  onSuggestionClick\n}) => {\n  const formatTimestamp = timestamp => {\n    const now = new Date();\n    const messageTime = new Date(timestamp);\n    const diffInMinutes = Math.floor((now - messageTime) / (1000 * 60));\n    if (diffInMinutes < 1) return 'Just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return messageTime.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-group\",\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type}-message`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), message.type === 'bot' && message.confidence && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-confidence\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `confidence-indicator ${message.confidence > 0.7 ? 'high' : message.confidence > 0.4 ? 'medium' : 'low'}`,\n            children: message.confidence > 0.7 ? '●' : message.confidence > 0.4 ? '◐' : '○'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-timestamp\",\n        children: formatTimestamp(message.timestamp)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), message.type === 'bot' && message.suggestions && message.suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-suggestions\",\n        children: message.suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggestion-button\",\n          onClick: () => onSuggestionClick(suggestion),\n          children: suggestion\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageGroup;\nexport default MessageGroup;\nvar _c;\n$RefreshReg$(_c, \"MessageGroup\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageGroup","messages","onSuggestionClick","formatTimestamp","timestamp","now","Date","messageTime","diffInMinutes","Math","floor","toLocaleTimeString","hour","minute","className","children","map","message","type","text","fileName","_jsxFileName","lineNumber","columnNumber","confidence","suggestions","length","suggestion","index","onClick","id","_c","$RefreshReg$"],"sources":["D:/MY projects/CupeKG/cupe-kg-frontend/src/components/ChatInterface/MessageGroup.jsx"],"sourcesContent":["import React from 'react';\r\nimport './MessageGroup.css';\r\n\r\nconst MessageGroup = ({ messages, onSuggestionClick }) => {\r\n  const formatTimestamp = (timestamp) => {\r\n    const now = new Date();\r\n    const messageTime = new Date(timestamp);\r\n    const diffInMinutes = Math.floor((now - messageTime) / (1000 * 60));\r\n    \r\n    if (diffInMinutes < 1) return 'Just now';\r\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\r\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\r\n    \r\n    return messageTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-group\">\r\n      {messages.map((message) => (\r\n        <div key={message.id} className={`message ${message.type}-message`}>\r\n          <div className=\"message-content\">\r\n            <p>{message.text}</p>\r\n            \r\n            {/* Show confidence for bot messages if available */}\r\n            {message.type === 'bot' && message.confidence && (\r\n              <div className=\"message-confidence\">\r\n                <span className={`confidence-indicator ${\r\n                  message.confidence > 0.7 ? 'high' : \r\n                  message.confidence > 0.4 ? 'medium' : 'low'\r\n                }`}>\r\n                  {message.confidence > 0.7 ? '●' : message.confidence > 0.4 ? '◐' : '○'}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"message-timestamp\">\r\n            {formatTimestamp(message.timestamp)}\r\n          </div>\r\n          \r\n          {/* Dynamic suggestions for bot messages */}\r\n          {message.type === 'bot' && message.suggestions && message.suggestions.length > 0 && (\r\n            <div className=\"message-suggestions\">\r\n              {message.suggestions.map((suggestion, index) => (\r\n                <button \r\n                  key={index}\r\n                  className=\"suggestion-button\"\r\n                  onClick={() => onSuggestionClick(suggestion)}\r\n                >\r\n                  {suggestion}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageGroup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}